{
  "version": 3,
  "sources": ["../mocks/index.js", "../server.ts", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "../app/root.tsx", "../app/session.server.ts", "../app/models/user.server.ts", "../app/routes/story/new.tsx", "../app/models/magazine.server.ts", "../app/models/utils.server.ts", "../app/routes/mag/new.tsx", "../app/utils.ts", "../app/routes/logout.tsx", "../app/routes/index.tsx", "../app/routes/login.tsx", "../app/routes/notes.tsx", "../app/models/note.server.ts", "../app/routes/notes/$noteId.tsx", "../app/routes/notes/index.tsx", "../app/routes/notes/new.tsx", "../app/routes/join.tsx", "../cypress/support/test-routes/create-user.ts", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["const { setupServer } = require(\"msw/node\");\n\nconst server = setupServer();\n\nserver.listen({ onUnhandledRequest: \"bypass\" });\n\nprocess.once(\"SIGINT\", () => server.close());\nprocess.once(\"SIGTERM\", () => server.close());\n", "import { createRequestHandler } from \"@remix-run/architect\";\nimport * as build from \"@remix-run/dev/server-build\";\n\nif (process.env.NODE_ENV !== \"production\") {\n  require(\"./mocks\");\n}\n\nexport const handler = createRequestHandler({\n  build,\n  mode: process.env.NODE_ENV,\n});\n", "\nimport * as entryServer from \"/Users/msavast1/developer/other/grundge/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/story/new.tsx\";\nimport * as route2 from \"./routes/mag/new.tsx\";\nimport * as route3 from \"./routes/logout.tsx\";\nimport * as route4 from \"./routes/index.tsx\";\nimport * as route5 from \"./routes/login.tsx\";\nimport * as route6 from \"./routes/notes.tsx\";\nimport * as route7 from \"./routes/notes/$noteId.tsx\";\nimport * as route8 from \"./routes/notes/index.tsx\";\nimport * as route9 from \"./routes/notes/new.tsx\";\nimport * as route10 from \"./routes/join.tsx\";\nimport * as route11 from \"./../cypress/support/test-routes/create-user.ts\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_cssModules\":false,\"unstable_cssSideEffectImports\":false,\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"unstable_vanillaExtract\":false,\"v2_errorBoundary\":false,\"v2_meta\":false,\"v2_routeConvention\":false};\n  export const publicPath = \"/_static/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/story/new\": {\n      id: \"routes/story/new\",\n      parentId: \"root\",\n      path: \"story/new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/mag/new\": {\n      id: \"routes/mag/new\",\n      parentId: \"root\",\n      path: \"mag/new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/notes\": {\n      id: \"routes/notes\",\n      parentId: \"root\",\n      path: \"notes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/notes/$noteId\": {\n      id: \"routes/notes/$noteId\",\n      parentId: \"routes/notes\",\n      path: \":noteId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/notes/index\": {\n      id: \"routes/notes/index\",\n      parentId: \"routes/notes\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/notes/new\": {\n      id: \"routes/notes/new\",\n      parentId: \"routes/notes\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/join\": {\n      id: \"routes/join\",\n      parentId: \"root\",\n      path: \"join\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"../cypress/support/test-routes/create-user\": {\n      id: \"../cypress/support/test-routes/create-user\",\n      parentId: \"root\",\n      path: \"__tests/create-user\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    }\n  };", "import { PassThrough } from \"stream\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const callbackName = isbot(request.headers.get(\"user-agent\"))\n    ? \"onAllReady\"\n    : \"onShellReady\";\n\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        [callbackName]: () => {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: didError ? 500 : responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError: (err: unknown) => {\n          reject(err);\n        },\n        onError: (error: unknown) => {\n          didError = true;\n\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type {\n  LinksFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nimport tailwindStylesheetUrl from \"./styles/tailwind.css\";\nimport { getUser } from \"./session.server\";\n\nexport const links: LinksFunction = () => {\n  return [\n    { rel: \"stylesheet\", href: tailwindStylesheetUrl },\n    // NOTE: Architect deploys the public directory to /_static/\n    { rel: \"icon\", href: \"/_static/favicon.ico\" },\n  ];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Remix Notes\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\ntype LoaderData = {\n  user: Awaited<ReturnType<typeof getUser>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  return json<LoaderData>({\n    user: await getUser(request),\n  });\n};\n\nexport default function App() {\n  return (\n    <html lang=\"en\" className=\"h-full\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"h-full\">\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\nimport type { User } from \"~/models/user.server\";\nimport { getUserById } from \"~/models/user.server\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nconst USER_SESSION_KEY = \"userId\";\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get(\"Cookie\");\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function getUserId(\n  request: Request\n): Promise<User[\"id\"] | undefined> {\n  const session = await getSession(request);\n  const userId = session.get(USER_SESSION_KEY);\n  return userId;\n}\n\nexport async function getUser(request: Request) {\n  const userId = await getUserId(request);\n  if (userId === undefined) return null;\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n) {\n  const userId = await getUserId(request);\n  if (!userId) {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  return userId;\n}\n\nexport async function requireUser(request: Request) {\n  const userId = await requireUserId(request);\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function createUserSession({\n  request,\n  userId,\n  remember,\n  redirectTo,\n}: {\n  request: Request;\n  userId: string;\n  remember: boolean;\n  redirectTo: string;\n}) {\n  const session = await getSession(request);\n  session.set(USER_SESSION_KEY, userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\n        maxAge: remember\n          ? 60 * 60 * 24 * 7 // 7 days\n          : undefined,\n      }),\n    },\n  });\n}\n\nexport async function logout(request: Request) {\n  const session = await getSession(request);\n  return redirect(\"/\", {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\n    },\n  });\n}\n", "import arc from \"@architect/functions\";\nimport bcrypt from \"bcryptjs\";\nimport invariant from \"tiny-invariant\";\n\nexport type User = { id: `email#${string}`; email: string };\nexport type Password = { password: string };\n\nexport async function getUserById(id: User[\"id\"]): Promise<User | null> {\n  const db = await arc.tables();\n  const result = await db.user.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": id },\n  });\n\n  const [record] = result.Items;\n  if (record) return { id: record.pk, email: record.email };\n  return null;\n}\n\nexport async function getUserByEmail(email: User[\"email\"]) {\n  return getUserById(`email#${email}`);\n}\n\nasync function getUserPasswordByEmail(email: User[\"email\"]) {\n  const db = await arc.tables();\n  const result = await db.password.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": `email#${email}` },\n  });\n\n  const [record] = result.Items;\n\n  if (record) return { hash: record.password };\n  return null;\n}\n\nexport async function createUser(\n  email: User[\"email\"],\n  password: Password[\"password\"]\n) {\n  const hashedPassword = await bcrypt.hash(password, 10);\n  const db = await arc.tables();\n  await db.password.put({\n    pk: `email#${email}`,\n    password: hashedPassword,\n  });\n\n  await db.user.put({\n    pk: `email#${email}`,\n    email,\n  });\n\n  const user = await getUserByEmail(email);\n  invariant(user, `User not found after being created. This should not happen`);\n\n  return user;\n}\n\nexport async function deleteUser(email: User[\"email\"]) {\n  const db = await arc.tables();\n  await db.password.delete({ pk: `email#${email}` });\n  await db.user.delete({ pk: `email#${email}` });\n}\n\nexport async function verifyLogin(\n  email: User[\"email\"],\n  password: Password[\"password\"]\n) {\n  const userPassword = await getUserPasswordByEmail(email);\n\n  if (!userPassword) {\n    return undefined;\n  }\n\n  const isValid = await bcrypt.compare(password, userPassword.hash);\n  if (!isValid) {\n    return undefined;\n  }\n\n  return getUserByEmail(email);\n}\n", "import type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport {\n  json,\n  redirect,\n  unstable_composeUploadHandlers as composeUploadHandlers,\n  unstable_createMemoryUploadHandler as createMemoryUploadHandler,\n  unstable_parseMultipartFormData as parseMultipartFormData,\n} from \"@remix-run/node\";\nimport { Form, useActionData, useLoaderData } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport type { Story } from \"~/models/magazine.server\";\nimport { createStoryST, createStoryTagST } from \"~/models/magazine.server\";\nimport { requireUser } from \"~/session.server\";\nimport { uploadImage } from \"~/models/utils.server\";\n\nexport async function loader({ request }: LoaderArgs) {\n  const email = (await requireUser(request)).email;\n  if (process.env.ADMIN !== email) {\n    const searchParams = new URLSearchParams([\n      [\"redirectTo\", new URL(request.url).pathname],\n    ]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  // const magazineItems = await getMagazineItems();\n  return null;  // json({ magazineItems });\n}\n\nexport async function action({ request }: ActionArgs) {\n  await requireUser(request);\n  const clonedData = request.clone();\n  const formDatas = await clonedData.formData();\n  const { _action } = Object.fromEntries(formDatas);\n  let secure_url: string = \"\";\n  if (_action === \"create\") {\n    const pubDate =formDatas.get(\"pubDate\");\n    const volume = formDatas.get(\"volume\");\n    const mag = formDatas.get(\"mag\");\n    const name = formDatas.get(\"name\");\n    const author = formDatas.get(\"author\");\n    const excerpt = formDatas.get(\"excerpt\");\n    const img = formDatas.get(\"img\");\n    const url = formDatas.get(\"url\");\n    const words = parseInt(formDatas.get(\"words\") as string);\n\n    if (typeof name !== \"string\" || name.length === 0) {\n      return json(\n        {\n          errors: {\n            name: \"name needed\",\n            url: null,\n            img: null,\n            pubDate: null,\n            volume: null,\n            mag: null,\n            author: null,\n            words: null,\n            excerpt: null,\n            imgCloud: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    if (!pubDate) {\n      return json(\n        {\n          errors: {\n            name: null,\n            url: null,\n            img: null,\n            pubDate: \"Date needed\",\n            volume: null,\n            mag: null,\n            author: null,\n            words: null,\n            excerpt: null,\n            imgCloud: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof url !== \"string\" || url.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            url: \"url needed\",\n            img: null,\n            pubDate: null,\n            volume: null,\n            mag: null,\n            author: null,\n            words: null,\n            excerpt: null,\n            imgCloud: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof img !== \"string\" || img.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            img: \"img is required\",\n            url: null,\n            pubDate: null,\n            mag: null,\n            author: null,\n            words: null,\n            excerpt: null,\n            volume: null,\n            imgCloud: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof mag !== \"string\" || mag.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            url: null,\n            img: null,\n            pubDate: null,\n            volume: null,\n            mag: \"Magazine needed\",\n            author: null,\n            words: null,\n            excerpt: null,\n            imgCloud: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof author !== \"string\" || author.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            url: null,\n            img: null,\n            pubDate: null,\n            volume: null,\n            mag: null,\n            author: \"Author needed\",\n            words: null,\n            excerpt: null,\n            imgCloud: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof excerpt !== \"string\" || excerpt.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            url: null,\n            img: null,\n            pubDate: null,\n            volume: null,\n            mag: null,\n            author: null,\n            words: null,\n            excerpt: \"Excerpt needed\",\n            imgCloud: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof words !== \"number\" || !words) {\n      return json(\n        {\n          errors: {\n            name: null,\n            words: \"words needed\",\n            pubDate: null,\n            url: null,\n            img: null,\n            volume: null,\n            mag: null,\n            author: null,\n            excerpt: null,\n            imgCloud: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    const story = await createStoryST({\n      name,\n      url,\n      img,\n      author,\n      pubDate,\n      volume,\n      mag,\n      excerpt,\n      words,\n    } as Story);\n    console.log('story', story);\n    const rando = Math.random() * 100;\n    const storyTag = await createStoryTagST({ storyId: story.id, tag: rando.toString() })\n    console.log('storyTag', storyTag);\n    // await createTag({ id: storyTag.id || 'null', tag: storyTag.tag })\n\n    return redirect(`/`);\n  }\n  if (_action === \"upload\") {\n    const handlers = async ({\n      name,\n      data,\n    }: {\n      name: string;\n      data: AsyncIterable<Uint8Array>;\n    }) => {\n      if (name !== \"imgCloud\") {\n        return undefined;\n      }\n      const uploadedImage = await uploadImage(data);\n      secure_url = uploadedImage.secure_url;\n      return secure_url;\n    };\n    const uploadHandler = composeUploadHandlers(\n      handlers,\n      createMemoryUploadHandler()\n    );\n    const imgFormData = await parseMultipartFormData(request, uploadHandler);\n    const imgCloud = imgFormData.get(\"imgCloud\");\n    if (typeof imgCloud !== \"string\" || imgCloud.length === 0) {\n      return json(\n        {\n          errors: {\n            imgCloud: \"imgCloud needed\",\n            name: null,\n            words: null,\n            pubDate: null,\n            url: null,\n            img: null,\n            volume: null,\n            mag: null,\n            author: null,\n            excerpt: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n    return json({\n      uploadedImage: secure_url,\n      errors: {\n        imgCloud: null,\n        name: null,\n        words: null,\n        pubDate: null,\n        url: null,\n        img: null,\n        volume: null,\n        mag: null,\n        author: null,\n        excerpt: null,\n      },\n    });\n  }\n  return redirect(\"/\");\n}\n\nexport default function NewStoryPage() {\n  const data = useLoaderData<typeof loader>();\n  const actionData = useActionData<typeof action>();\n\n  const nameRef = React.useRef<HTMLInputElement>(null);\n  const pubDateRef = React.useRef<HTMLInputElement>(null);\n  const urlRef = React.useRef<HTMLInputElement>(null);\n  const authorRef = React.useRef<HTMLInputElement>(null);\n  const imgRef = React.useRef<HTMLInputElement>(null);\n  const volumeRef = React.useRef<HTMLInputElement>(null);\n  const wordsRef = React.useRef<HTMLInputElement>(null);\n  const excerptRef = React.useRef<HTMLInputElement & HTMLTextAreaElement>(null);\n  const magRef = React.useRef<HTMLInputElement & HTMLSelectElement>(null);\n  const imgSourceRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.name) {\n      nameRef.current?.focus();\n    } else if (actionData?.errors?.img) {\n      imgRef.current?.focus();\n    } else if (actionData?.errors?.pubDate) {\n      pubDateRef.current?.focus();\n    } else if (actionData?.errors?.url) {\n      urlRef.current?.focus();\n    } else if (actionData?.errors?.excerpt) {\n      excerptRef.current?.focus();\n    } else if (actionData?.errors?.volume) {\n      volumeRef.current?.focus();\n    } else if (actionData?.errors?.mag) {\n      magRef.current?.focus();\n    } else if (actionData?.errors?.words) {\n      wordsRef.current?.focus();\n    } else if (actionData?.errors?.author) {\n      authorRef.current?.focus();\n    } else if (actionData?.errors?.imgCloud) {\n      imgSourceRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div>\n      <h3 className=\"text-lg\">New Story</h3>\n      <Form\n        method=\"post\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 8,\n          width: \"100%\",\n        }}\n      >\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Story Name\"\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            name=\"name\"\n            ref={nameRef}\n            aria-invalid={actionData?.errors?.name ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.name ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.name && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.name}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Date Published\"\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            name=\"pubDate\"\n            ref={pubDateRef}\n            aria-invalid={actionData?.errors?.pubDate ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.pubDate ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.pubDate && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.pubDate}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Author\"\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            name=\"author\"\n            ref={authorRef}\n            aria-invalid={actionData?.errors?.author ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.author ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.author && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.author}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Volume\"\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            name=\"volume\"\n            ref={volumeRef}\n            aria-invalid={actionData?.errors?.volume ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.volume ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.volume && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.volume}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Word Count\"\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            name=\"words\"\n            ref={wordsRef}\n            aria-invalid={actionData?.errors?.words ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.words ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.words && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.words}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <textarea\n            className=\"textarea-bordered textarea m-2\"\n            placeholder=\"Excerpt\"\n            ref={excerptRef}\n            cols={34}\n            name=\"excerpt\"\n            aria-invalid={actionData?.errors?.excerpt ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.excerpt ? \"body-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.excerpt && (\n            <div className=\"pt-1 text-red-700\" id=\"body-error\">\n              {actionData.errors.excerpt}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"URL\"\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            name=\"url\"\n            ref={urlRef}\n            aria-invalid={actionData?.errors?.url ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.url ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.url && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.url}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Img URL\"\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            value={actionData?.uploadedImage}\n            name=\"img\"\n            ref={imgRef}\n            aria-invalid={actionData?.errors?.img ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.img ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.img && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.img}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <select\n            name=\"mag\"\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            placeholder=\"magazine\"\n            ref={magRef}\n            aria-invalid={actionData?.errors?.mag ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.mag ? \"title-error\" : undefined\n            }\n          >\n            {/* {data.magazineItems.map((m) => {\n              return ( */}\n                <option key={'clfplb95i000008l93n3p51ee'} value={'clfplb95i000008l93n3p51ee'}>\n                  {'clfplb95i000008l93n3p51ee'}\n                </option>\n              {/* );\n            })} */}\n          </select>\n\n          {actionData?.errors?.mag && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.mag}\n            </div>\n          )}\n        </div>\n\n        <div className=\"text-left\">\n          <button className=\"btn\" type=\"submit\" name=\"_action\" value=\"create\">\n            Save\n          </button>\n        </div>\n      </Form>\n      <h6>Upload an image</h6>\n      <Form method=\"post\" encType=\"multipart/form-data\" id=\"upload-form\">\n        <div>\n          <input\n            ref={imgSourceRef}\n            id=\"imgCloud\"\n            type=\"file\"\n            name=\"imgCloud\"\n            accept=\"image/*\"\n            className=\"file-input file-input-bordered w-full max-w-xs\"\n          />\n        </div>\n        <div>\n          <button className=\"btn\" type=\"submit\" name=\"_action\" value=\"upload\">\n            {\" \"}\n            Upload to Cloudinary{\" \"}\n          </button>\n        </div>\n      </Form>\n    </div>\n  );\n}\n", "import arc from \"@architect/functions\";\nimport cuid from \"cuid\";\n\nexport type Magazine = {\n  id:  string;\n  name: string;\n  display: string;\n  url: string;\n  desc: string;\n  img: string;\n}\n\nexport type StoryTag = {\n  id?: string;  // \n  storyId: ReturnType<typeof cuid>; // story cuid\n  tag: string;\n}\n\nexport type Tag = {\n  id: string;\n  tag: string;\n}\n\nexport type Story = {\n  id:  ReturnType<typeof cuid>;\n  volume: string;\n  name: string;\n  img: string;\n  author: string;\n  excerpt: string;\n  url: string;\n  words: number;\n  pubDate: string;\n  mag: Magazine['name'];\n}\n\n// create functions for magstorytag table\nexport async function createStoryTagST({\n  tag,\n  storyId,\n}: StoryTag): Promise<StoryTag> {\n  // story#storyId\n  //  tag#tagId\n  const db = await arc.tables();\n  const id = cuid();\n  const resultST = await db.magstorytag.put({\n    pk: `story#${storyId}`,\n    sk: `tag#${id}`,\n    tag\n  });\n\n  return {\n    id:  id,\n    storyId: resultST.pk.replace(/^story#/, ''),\n    tag\n  };\n}\n\nexport async function createMagazineST({\n  name,\n  display,\n  url,\n  desc,\n  img,\n}: Magazine): Promise<Magazine> {\n  // pk # mag#magId \n  // sk # meta#magId\n  const db = await arc.tables();\n  const id = cuid();\n  const result = await db.magstorytag.put({\n    pk: `mag#${id}`,\n    sk: `meta#${id}`,\n    name,\n    display,\n    url,\n    desc,\n    img,\n    id: id,\n  });\n  return {\n    id:  id,\n    name: result.name,\n    display: result.display,\n    url: result.url,\n    desc: result.desc,\n    img: result.img,\n  };\n}\n\nexport async function createStoryST({\n  img,\n  volume,\n  name,\n  author,\n  excerpt,\n  url,\n  words,\n  pubDate,\n  mag,\n}: Story): Promise<Story> {\n  // pk mag#magId \n  // sk story#storyId\n  const db = await arc.tables();\n  const id = cuid();\n  const result = await db.magstorytag.put({\n    pk: `mag#${mag}`,\n    sk: `story#${id}`,\n    img,\n    volume,\n    name,\n    author,\n    excerpt,\n    url,\n    words,\n    pubDate,\n    id: id,\n    mag,\n  });\n  return {\n    id:  id,\n    img: result.img,\n    volume: result.volume,\n    name: result.name,\n    mag: result.mag,\n    author: result.author,\n    excerpt: result.excerpt,\n    url: result.url,\n    words: result.words,\n    pubDate: result.pubDate,\n  };\n}\n\nexport async function createTagST({\n  tag,\n}: Tag): Promise<Tag> {\n  // mag#magId\n  // tag#tagId\n  const id = cuid();\n  const db = await arc.tables();\n  const result = await db.tag.put({\n    pk: `tag#${id}`,\n    tag\n  });\n\n  return {\n    id:  result.pk.replace(/^tag#/, ''),\n    tag,\n  };\n}\n//\n\n\n\nasync function queryTable(partitionKey: string, sortKeyPrefix: string) {\n  const data = await arc.tables()\n  const result = await data['magstorytag'].query({\n    KeyConditionExpression: '#partitionKey = :partitionKey and begins_with(#sortKey, :sortKeyPrefix)',\n    ExpressionAttributeNames: {\n      '#partitionKey': 'pk',\n      '#sortKey': 'sk'\n    },\n    ExpressionAttributeValues: {\n      ':partitionKey': partitionKey,\n      ':sortKeyPrefix': sortKeyPrefix\n    }\n  })\n  return result.Items\n}\n\nasync function queryIndex(partitionKey: string, sortKeyPrefix: string) {\n  const data = await arc.tables()\n  const result = await data['magstorytag'].query({\n    IndexName: 'tagstories',\n    KeyConditionExpression: '#partitionKey = :partitionKey and begins_with(#sortKey, :sortKeyPrefix)',\n    ExpressionAttributeNames: {\n      '#partitionKey': 'sk',\n      '#sortKey': 'pk'\n    },\n    ExpressionAttributeValues: {\n      ':partitionKey': partitionKey,\n      ':sortKeyPrefix': sortKeyPrefix\n    }\n  })\n  return result.Items\n}\n\n\nasync function scanIndex(sortKeyPrefix: string) {\n  const data = await arc.tables()\n  const result = await data['magstorytag'].scan({\n    IndexName: 'tagstories',\n    FilterExpression: 'begins_with(#sortKey, :sortKeyPrefix)',\n    ExpressionAttributeNames: {\n      '#sortKey': 'pk'\n    },\n    ExpressionAttributeValues: {\n      ':sortKeyPrefix': sortKeyPrefix\n    }\n  })\n  return result.Items\n}\n\nexport async function scanMags() {\n  const mags = await scanIndex('mag#')\n  return mags;\n}\n\nexport async function getMags() {\n  const mags = await queryIndex('meta#clfquoiap0000ptu627383kc8', 'mag#')\n  return mags;\n}\n\nexport async function getMags1() {\n  const mags = await queryTable('mag#clfquoiap0000ptu627383kc8', 'meta#')\n  return mags;\n}\n\n\n// export function getMagId()\n// export function getMagazineItems()\n// export function deleteMag()\n// export function editMag()\n\n", "// utils/util.server.js\n\nimport type { UploadApiResponse } from \"cloudinary\";\nimport cloudinary from \"cloudinary\";\nimport { writeAsyncIterableToWritable } from \"@remix-run/node\";\n\ncloudinary.v2.config({\n  cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\n  api_key: process.env.CLOUDINARY_API_KEY,\n  api_secret: process.env.CLOUDINARY_API_SECRET,\n});\n\nasync function uploadImage(data: AsyncIterable<Uint8Array>) {\n  const uploadPromise = new Promise<UploadApiResponse>(\n    async (resolve, reject) => {\n      const uploadStream = cloudinary.v2.uploader.upload_stream(\n        {\n          folder: \"remix\",\n        },\n        (error, result) => {\n          if (error || !result) {\n            reject(error);\n            return;\n          }\n          resolve(result);\n        }\n      );\n      await writeAsyncIterableToWritable(data, uploadStream);\n    }\n  );\n\n  return uploadPromise;\n}\n\nexport { uploadImage };\n", "import type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport {\n  json,\n  redirect,\n  unstable_composeUploadHandlers as composeUploadHandlers,\n  unstable_createMemoryUploadHandler as createMemoryUploadHandler,\n  unstable_parseMultipartFormData as parseMultipartFormData,\n} from \"@remix-run/node\";\nimport { Form, useActionData, useLoaderData } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport { getMags1, Magazine, scanMags } from \"~/models/magazine.server\";\nimport { getMags } from \"~/models/magazine.server\";\nimport { createMagazineST } from \"~/models/magazine.server\";\nimport { requireUser } from \"~/session.server\";\nimport { useUser } from \"~/utils\";\nimport { uploadImage } from \"~/models/utils.server\";\n\nexport async function action({ request }: ActionArgs) {\n  await requireUser(request);\n  const clonedData = request.clone();\n  const formDatas = await clonedData.formData();\n  const { _action, ...values } = Object.fromEntries(formDatas);\n  let secure_url: string = \"\";\n  if (_action === \"create\") {\n    if (typeof values.name !== \"string\" || values.name.length === 0) {\n      return json(\n        {\n          errors: {\n            name: \"Name is required\",\n            desc: null,\n            display: null,\n            url: null,\n            img: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof values.display !== \"string\" || values.display.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            desc: null,\n            display: \"display is required\",\n            url: null,\n            img: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof values.desc !== \"string\" || values.desc.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            desc: \"desc is required\",\n            display: null,\n            url: null,\n            img: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof values.url !== \"string\" || values.url.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            url: \"url is required\",\n            display: null,\n            desc: null,\n            img: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof values.img !== \"string\" || values.img.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            img: \"img is required\",\n            display: null,\n            url: null,\n            desc: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    const mag = await createMagazineST({\n      id: values.name,\n      name: values.name,\n      display: values.display,\n      url: values.url,\n      desc: values.desc,\n      img: values.img,\n    } as Magazine);\n    console.log('mag', mag);\n\n    return redirect(`/`);\n  }\n\n  if (_action === \"upload\") {\n    const handlers = async ({\n      name,\n      data,\n    }: {\n      name: string;\n      data: AsyncIterable<Uint8Array>;\n    }) => {\n      if (name !== \"imgCloud\") {\n        return undefined;\n      }\n      const uploadedImage = await uploadImage(data);\n      secure_url = uploadedImage.secure_url;\n      return secure_url;\n    };\n    const uploadHandler = composeUploadHandlers(\n      handlers,\n      createMemoryUploadHandler()\n    );\n    const imgFormData = await parseMultipartFormData(request, uploadHandler);\n    const imgCloud = imgFormData.get(\"imgCloud\");\n    if (typeof imgCloud !== \"string\" || imgCloud.length === 0) {\n      return json(\n        {\n          errors: {\n            imgCloud: \"imgCloud needed\",\n            name: null,\n            url: null,\n            display: null,\n            desc: null,\n            img: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n    return json({\n      uploadedImage: secure_url,\n      errors: {\n        imgCloud: null,\n        name: null,\n        url: null,\n        display: null,\n        desc: null,\n        img: null,\n      },\n    });\n  }\n  return redirect(\"/\");\n}\n\nexport async function loader({ request }: LoaderArgs) {\n  const email = (await requireUser(request)).email;\n  if (process.env.ADMIN !== email) {\n    const searchParams = new URLSearchParams([\n      [\"redirectTo\", new URL(request.url).pathname],\n    ]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  // const mag = await getMagById({ id: 'mag#the-mag' });\n  const mags = await getMags();\n  const mags1 = await getMags1();\n  const mags2 = await scanMags();\n\n  console.log('index mags', mags);\n  console.log('table mags', mags1);\n  console.log('scan mags', mags2);\n  return json({});\n}\n\nexport default function NewMagazinePage() {\n  const user = useUser();\n  const data = useLoaderData();\n  const actionData = useActionData<typeof action>();\n  const nameRef = React.useRef<HTMLInputElement>(null);\n  const descRef = React.useRef<HTMLInputElement & HTMLTextAreaElement>(null);\n  const urlRef = React.useRef<HTMLInputElement>(null);\n  const displayRef = React.useRef<HTMLInputElement>(null);\n  const imgRef = React.useRef<HTMLInputElement>(null);\n  const imgSourceRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.name) {\n      nameRef.current?.focus();\n    } else if (actionData?.errors?.desc) {\n      descRef.current?.focus();\n    } else if (actionData?.errors?.display) {\n      displayRef.current?.focus();\n    } else if (actionData?.errors?.url) {\n      urlRef.current?.focus();\n    } else if (actionData?.errors?.img) {\n      imgRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div>\n      <p>{user.email}</p>\n      <Form action=\"/logout\" method=\"post\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-slate-600 py-2 px-4 text-blue-100 hover:bg-blue-500 active:bg-blue-600\"\n        >\n          Logout\n        </button>\n      </Form>\n      <Form method=\"post\">\n        <section className=\"flex flex-col\">\n          <input\n            type=\"text\"\n            placeholder=\"Display Name\"\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            name=\"display\"\n            ref={displayRef}\n            aria-invalid={actionData?.errors?.display ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.display ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.display && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.display}\n            </div>\n          )}\n\n          <div>\n            <input\n              name=\"name\"\n              className=\"input-bordered input m-2 w-full max-w-xs\"\n              placeholder=\"Slug\"\n              ref={nameRef}\n              aria-invalid={actionData?.errors?.name ? true : undefined}\n              aria-errormessage={\n                actionData?.errors?.name ? \"title-error\" : undefined\n              }\n            />\n\n            {actionData?.errors?.name && (\n              <div className=\"pt-1 text-red-700\" id=\"title-error\">\n                {actionData.errors.name}\n              </div>\n            )}\n          </div>\n\n          <div>\n            <textarea\n              className=\"textarea-bordered textarea m-2\"\n              placeholder={\"Description\"}\n              ref={descRef}\n              cols={34}\n              name=\"desc\"\n              aria-invalid={actionData?.errors?.desc ? true : undefined}\n              aria-errormessage={\n                actionData?.errors?.desc ? \"body-error\" : undefined\n              }\n            />\n\n            {actionData?.errors?.desc && (\n              <div className=\"pt-1 text-red-700\" id=\"body-error\">\n                {actionData.errors.desc}\n              </div>\n            )}\n          </div>\n\n          <div>\n            <input\n              className=\"input-bordered input m-2 w-full max-w-xs\"\n              placeholder={\"URL\"}\n              name=\"url\"\n              ref={urlRef}\n              aria-invalid={actionData?.errors?.url ? true : undefined}\n              aria-errormessage={\n                actionData?.errors?.url ? \"title-error\" : undefined\n              }\n            />\n\n            {actionData?.errors?.url && (\n              <div className=\"pt-1 text-red-700\" id=\"title-error\">\n                {actionData.errors.url}\n              </div>\n            )}\n          </div>\n\n          <div>\n            <input\n              className=\"input-bordered input m-2 w-full max-w-xs\"\n              value={actionData?.uploadedImage}\n              placeholder={\"Img URL\"}\n              name=\"img\"\n              ref={imgRef}\n              aria-invalid={actionData?.errors?.img ? true : undefined}\n              aria-errormessage={\n                actionData?.errors?.img ? \"title-error\" : undefined\n              }\n            />\n\n            {actionData?.errors?.img && (\n              <div className=\"pt-1 text-red-700\" id=\"title-error\">\n                {actionData.errors.img}\n              </div>\n            )}\n          </div>\n\n          <div className=\"text-left\">\n            <button className=\"btn\" type=\"submit\" name=\"_action\" value=\"create\">\n              Save\n            </button>\n          </div>\n        </section>\n      </Form>\n      <div className=\"m-3 border-spacing-3 border\">\n        <h3 className=\"text-lg\">Upload an image</h3>\n        <Form method=\"post\" encType=\"multipart/form-data\" id=\"upload-form\">\n          <input ref={imgSourceRef}\n            id=\"imgCloud\"\n            type=\"file\"\n            name=\"imgCloud\"\n            accept=\"image/*\"\n            className=\"file-input file-input-bordered w-full max-w-xs\" />\n          <div>\n            <button className=\"btn\" type=\"submit\" name=\"_action\" value=\"upload\">\n              {\" \"}\n              Upload to Cloudinary{\" \"}\n            </button>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\n\nimport type { User } from \"~/models/user.server\";\n\nconst DEFAULT_REDIRECT = \"/\";\n\n/**\n * This should be used any time the redirect path is user-provided\n * (Like the query string on our login/signup pages). This avoids\n * open-redirect vulnerabilities.\n * @param {string} to The redirect destination\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\n */\nexport function safeRedirect(\n  to: FormDataEntryValue | string | null | undefined,\n  defaultRedirect: string = DEFAULT_REDIRECT\n) {\n  if (!to || typeof to !== \"string\") {\n    return defaultRedirect;\n  }\n\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\n    return defaultRedirect;\n  }\n\n  return to;\n}\n\n/**\n * This base hook is used in other hooks to quickly search for specific data\n * across all loader data using useMatches.\n * @param {string} id The route id\n * @returns {JSON|undefined} The router data or undefined if not found\n */\nexport function useMatchesData(\n  id: string\n): Record<string, unknown> | undefined {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\nfunction isUser(user: any): user is User {\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\n}\n\nexport function useOptionalUser(): User | undefined {\n  const data = useMatchesData(\"root\");\n  if (!data || !isUser(data.user)) {\n    return undefined;\n  }\n  return data.user;\n}\n\nexport function useUser(): User {\n  const maybeUser = useOptionalUser();\n  if (!maybeUser) {\n    throw new Error(\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\n    );\n  }\n  return maybeUser;\n}\n\nexport function validateEmail(email: unknown): email is string {\n  return typeof email === \"string\" && email.length > 3 && email.includes(\"@\");\n}\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { logout } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  return logout(request);\n};\n\nexport const loader: LoaderFunction = async () => {\n  return redirect(\"/\");\n};\n", "import { Link } from \"@remix-run/react\";\n\nimport { useOptionalUser } from \"~/utils\";\n\nexport default function Index() {\n  const user = useOptionalUser();\n  return (\n    <main className=\"relative min-h-screen bg-white sm:flex sm:items-center sm:justify-center\">\n      <div className=\"relative sm:pb-16 sm:pt-8\">\n        <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\n          <div className=\"relative shadow-xl sm:overflow-hidden sm:rounded-2xl\">\n            <div className=\"absolute inset-0\">\n              <img\n                className=\"h-full w-full object-cover\"\n                src=\"https://user-images.githubusercontent.com/1500684/158276318-61064670-06c3-43f3-86e3-d624785b8ff7.jpg\"\n                alt=\"Nirvana playing on stage with Kurt's jagstang guitar\"\n              />\n              <div className=\"absolute inset-0 bg-[color:rgba(255,56,56,0.5)] mix-blend-multiply\" />\n            </div>\n            <div className=\"relative px-4 pt-16 pb-8 sm:px-6 sm:pt-24 sm:pb-14 lg:px-8 lg:pb-20 lg:pt-32\">\n              <h1 className=\"text-center text-6xl font-extrabold tracking-tight sm:text-8xl lg:text-9xl\">\n                <span className=\"block uppercase text-red-500 drop-shadow-md\">\n                  Grunge Stack\n                </span>\n              </h1>\n              <p className=\"mx-auto mt-6 max-w-lg text-center text-xl text-white sm:max-w-3xl\">\n                Check the README.md file for instructions on how to get this\n                project deployed.\n              </p>\n              <div className=\"mx-auto mt-10 max-w-sm sm:flex sm:max-w-none sm:justify-center\">\n                {user ? (\n                  <Link\n                    to=\"/notes\"\n                    className=\"flex items-center justify-center rounded-md border border-transparent bg-white px-4 py-3 text-base font-medium text-red-700 shadow-sm hover:bg-red-50 sm:px-8\"\n                  >\n                    View Notes for {user.email}\n                  </Link>\n                ) : (\n                  <div className=\"space-y-4 sm:mx-auto sm:inline-grid sm:grid-cols-2 sm:gap-5 sm:space-y-0\">\n                    <Link\n                      to=\"/join\"\n                      className=\"flex items-center justify-center rounded-md border border-transparent bg-white px-4 py-3 text-base font-medium text-red-700 shadow-sm hover:bg-red-50 sm:px-8\"\n                    >\n                      Sign up YOU!!!!\n                    </Link>\n                    <Link\n                      to=\"/login\"\n                      className=\"flex items-center justify-center rounded-md bg-red-500 px-4 py-3 font-medium text-white hover:bg-red-600\"\n                    >\n                      Log In\n                    </Link>\n                  </div>\n                )}\n              </div>\n              <a href=\"https://remix.run\">\n                <img\n                  src=\"https://user-images.githubusercontent.com/1500684/158298926-e45dafff-3544-4b69-96d6-d3bcc33fc76a.svg\"\n                  alt=\"Remix\"\n                  className=\"mx-auto mt-16 w-full max-w-[12rem] md:max-w-[16rem]\"\n                />\n              </a>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mx-auto max-w-7xl py-2 px-4 sm:px-6 lg:px-8\">\n          <div className=\"mt-6 flex flex-wrap justify-center gap-8\">\n            {[\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157991167-651c8fc5-2f72-4afa-94d8-2520ecbc5ebc.svg\",\n                alt: \"AWS\",\n                href: \"https://aws.com\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157991935-26c0d587-b866-49f5-af34-8f04be1c9df2.svg\",\n                alt: \"DynamoDB\",\n                href: \"https://aws.amazon.com/dynamodb/\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157990874-31f015c3-2af7-4669-9d61-519e5ecfdea6.svg\",\n                alt: \"Architect\",\n                href: \"https://arc.codes\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157764276-a516a239-e377-4a20-b44a-0ac7b65c8c14.svg\",\n                alt: \"Tailwind\",\n                href: \"https://tailwindcss.com\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157764454-48ac8c71-a2a9-4b5e-b19c-edef8b8953d6.svg\",\n                alt: \"Cypress\",\n                href: \"https://www.cypress.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772386-75444196-0604-4340-af28-53b236faa182.svg\",\n                alt: \"MSW\",\n                href: \"https://mswjs.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772447-00fccdce-9d12-46a3-8bb4-fac612cdc949.svg\",\n                alt: \"Vitest\",\n                href: \"https://vitest.dev\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772662-92b0dd3a-453f-4d18-b8be-9fa6efde52cf.png\",\n                alt: \"Testing Library\",\n                href: \"https://testing-library.com\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772934-ce0a943d-e9d0-40f8-97f3-f464c0811643.svg\",\n                alt: \"Prettier\",\n                href: \"https://prettier.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772990-3968ff7c-b551-4c55-a25c-046a32709a8e.svg\",\n                alt: \"ESLint\",\n                href: \"https://eslint.org\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157773063-20a0ed64-b9f8-4e0b-9d1e-0b65a3d4a6db.svg\",\n                alt: \"TypeScript\",\n                href: \"https://typescriptlang.org\",\n              },\n            ].map((img) => (\n              <a\n                key={img.href}\n                href={img.href}\n                className=\"flex h-16 w-32 justify-center p-1 grayscale transition hover:grayscale-0 focus:grayscale-0\"\n              >\n                <img alt={img.alt} src={img.src} className=\"object-contain\" />\n              </a>\n            ))}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n}\n", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { createUserSession, getUserId } from \"~/session.server\";\nimport { verifyLogin } from \"~/models/user.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\ninterface ActionData {\n  errors?: {\n    email?: string;\n    password?: string;\n  };\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"));\n  const remember = formData.get(\"remember\");\n\n  if (!validateEmail(email)) {\n    return json<ActionData>(\n      { errors: { email: \"Email is invalid\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json<ActionData>(\n      { errors: { password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json<ActionData>(\n      { errors: { password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await verifyLogin(email, password);\n\n  if (!user) {\n    return json<ActionData>(\n      { errors: { email: \"Invalid email or password\" } },\n      { status: 400 }\n    );\n  }\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: remember === \"on\" ? true : false,\n    redirectTo,\n  });\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Login\",\n  };\n};\n\nexport default function LoginPage() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/notes\";\n  const actionData = useActionData() as ActionData;\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center\">\n      <div className=\"mx-auto w-full max-w-md px-8\">\n        <Form method=\"post\" className=\"space-y-6\" noValidate>\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Email address\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.email && (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.password && (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Log in\n          </button>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <input\n                id=\"remember\"\n                name=\"remember\"\n                type=\"checkbox\"\n                className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              />\n              <label\n                htmlFor=\"remember\"\n                className=\"ml-2 block text-sm text-gray-900\"\n              >\n                Remember me\n              </label>\n            </div>\n            <div className=\"text-center text-sm text-gray-500\">\n              Don't have an account?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/join\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Sign up\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\n\nimport { requireUserId } from \"~/session.server\";\nimport { useUser } from \"~/utils\";\nimport { getNoteListItems } from \"~/models/note.server\";\n\ntype LoaderData = {\n  noteListItems: Awaited<ReturnType<typeof getNoteListItems>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await requireUserId(request);\n  const noteListItems = await getNoteListItems({ userId });\n  return json<LoaderData>({ noteListItems });\n};\n\nexport default function NotesPage() {\n  const data = useLoaderData() as LoaderData;\n  const user = useUser();\n\n  return (\n    <div className=\"flex h-full min-h-screen flex-col\">\n      <header className=\"flex items-center justify-between bg-slate-800 p-4 text-white\">\n        <h1 className=\"text-3xl font-bold\">\n          <Link to=\".\">Notes</Link>\n        </h1>\n        <p>{user.email}</p>\n        <Form action=\"/logout\" method=\"post\">\n          <button\n            type=\"submit\"\n            className=\"rounded bg-slate-600 py-2 px-4 text-blue-100 hover:bg-blue-500 active:bg-blue-600\"\n          >\n            Logout\n          </button>\n        </Form>\n      </header>\n\n      <main className=\"flex h-full bg-white\">\n        <div className=\"h-full w-80 border-r bg-gray-50\">\n          <Link to=\"new\" className=\"block p-4 text-xl text-blue-500\">\n            + New Note\n          </Link>\n\n          <hr />\n\n          {data.noteListItems.length === 0 ? (\n            <p className=\"p-4\">No notes yet</p>\n          ) : (\n            <ol>\n              {data.noteListItems.map((note) => (\n                <li key={note.id}>\n                  <NavLink\n                    className={({ isActive }) =>\n                      `block border-b p-4 text-xl ${isActive ? \"bg-white\" : \"\"}`\n                    }\n                    to={note.id}\n                  >\n                    \uD83D\uDCDD {note.title}\n                  </NavLink>\n                </li>\n              ))}\n            </ol>\n          )}\n        </div>\n\n        <div className=\"flex-1 p-6\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n}\n", "import arc from \"@architect/functions\";\nimport cuid from \"cuid\";\n\nimport type { User } from \"./user.server\";\n\nexport type Note = {\n  id: ReturnType<typeof cuid>;\n  userId: User[\"id\"];\n  title: string;\n  body: string;\n};\n\ntype NoteItem = {\n  pk: User[\"id\"];\n  sk: `note#${Note[\"id\"]}`;\n};\n\nconst skToId = (sk: NoteItem[\"sk\"]): Note[\"id\"] => sk.replace(/^note#/, \"\");\nconst idToSk = (id: Note[\"id\"]): NoteItem[\"sk\"] => `note#${id}`;\n\nexport async function getNote({\n  id,\n  userId,\n}: Pick<Note, \"id\" | \"userId\">): Promise<Note | null> {\n  const db = await arc.tables();\n  const result = await db.note.get({ pk: userId, sk: idToSk(id) });\n\n  if (result) {\n    return {\n      userId: result.pk,\n      id: result.sk,\n      title: result.title,\n      body: result.body,\n    };\n  }\n  return null;\n}\n\nexport async function getNoteListItems({\n  userId,\n}: Pick<Note, \"userId\">): Promise<Array<Pick<Note, \"id\" | \"title\">>> {\n  const db = await arc.tables();\n  console.log('userID', userId);\n  const result = await db.note.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": userId },\n  });\n\n  return result.Items.map((n: any) => ({\n    title: n.title,\n    id: skToId(n.sk),\n  }));\n}\n\nexport async function createNote({\n  body,\n  title,\n  userId,\n}: Pick<Note, \"body\" | \"title\" | \"userId\">): Promise<Note> {\n  const db = await arc.tables();\n\n  const result = await db.note.put({\n    pk: userId,\n    sk: idToSk(cuid()),\n    title: title,\n    body: body,\n  });\n  return {\n    id: skToId(result.sk),\n    userId: result.pk,\n    title: result.title,\n    body: result.body,\n  };\n}\n\nexport async function deleteNote({ id, userId }: Pick<Note, \"id\" | \"userId\">) {\n  const db = await arc.tables();\n  return db.note.delete({ pk: userId, sk: idToSk(id) });\n}\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useCatch, useLoaderData } from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\n\nimport { deleteNote } from \"~/models/note.server\";\nimport { getNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\ntype LoaderData = {\n  note: NonNullable<Awaited<ReturnType<typeof getNote>>>;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  const note = await getNote({ userId, id: params.noteId });\n  if (!note) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n  return json<LoaderData>({ note });\n};\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  await deleteNote({ userId, id: params.noteId });\n\n  return redirect(\"/notes\");\n};\n\nexport default function NoteDetailsPage() {\n  const data = useLoaderData() as LoaderData;\n\n  return (\n    <div>\n      <h3 className=\"text-2xl font-bold\">{data.note.title}</h3>\n      <p className=\"py-6\">{data.note.body}</p>\n      <hr className=\"my-4\" />\n      <Form method=\"post\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Delete\n        </button>\n      </Form>\n    </div>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return <div>An unexpected error occurred: {error.message}</div>;\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return <div>Note not found</div>;\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import { Link } from \"@remix-run/react\";\n\nexport default function NoteIndexPage() {\n  return (\n    <p>\n      No note selected. Select a note on the left, or{\" \"}\n      <Link to=\"new\" className=\"text-blue-500 underline\">\n        create a new note.\n      </Link>\n    </p>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { createNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\ntype ActionData = {\n  errors?: {\n    title?: string;\n    body?: string;\n  };\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const userId = await requireUserId(request);\n\n  const formData = await request.formData();\n  const title = formData.get(\"title\");\n  const body = formData.get(\"body\");\n\n  if (typeof title !== \"string\" || title.length === 0) {\n    return json<ActionData>(\n      { errors: { title: \"Title is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof body !== \"string\" || body.length === 0) {\n    return json<ActionData>(\n      { errors: { body: \"Body is required\" } },\n      { status: 400 }\n    );\n  }\n\n  const note = await createNote({ title, body, userId });\n\n  return redirect(`/notes/${note.id}`);\n};\n\nexport default function NewNotePage() {\n  const actionData = useActionData() as ActionData;\n  const titleRef = React.useRef<HTMLInputElement>(null);\n  const bodyRef = React.useRef<HTMLTextAreaElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.title) {\n      titleRef.current?.focus();\n    } else if (actionData?.errors?.body) {\n      bodyRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <Form\n      method=\"post\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 8,\n        width: \"100%\",\n      }}\n    >\n      <div>\n        <label className=\"flex w-full flex-col gap-1\">\n          <span>Title: </span>\n          <input\n            ref={titleRef}\n            name=\"title\"\n            className=\"flex-1 rounded-md border-2 border-blue-500 px-3 text-lg leading-loose\"\n            aria-invalid={actionData?.errors?.title ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.title ? \"title-error\" : undefined\n            }\n          />\n        </label>\n        {actionData?.errors?.title && (\n          <div className=\"pt-1 text-red-700\" id=\"title-error\">\n            {actionData.errors.title}\n          </div>\n        )}\n      </div>\n\n      <div>\n        <label className=\"flex w-full flex-col gap-1\">\n          <span>Body: </span>\n          <textarea\n            ref={bodyRef}\n            name=\"body\"\n            rows={8}\n            className=\"w-full flex-1 rounded-md border-2 border-blue-500 py-2 px-3 text-lg leading-6\"\n            aria-invalid={actionData?.errors?.body ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.body ? \"body-error\" : undefined\n            }\n          />\n        </label>\n        {actionData?.errors?.body && (\n          <div className=\"pt-1 text-red-700\" id=\"body-error\">\n            {actionData.errors.body}\n          </div>\n        )}\n      </div>\n\n      <div className=\"text-right\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Save\n        </button>\n      </div>\n    </Form>\n  );\n}\n", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { getUserId, createUserSession } from \"~/session.server\";\n\nimport { createUser, getUserByEmail } from \"~/models/user.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\ninterface ActionData {\n  errors: {\n    email?: string;\n    password?: string;\n  };\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\n\n  if (!validateEmail(email)) {\n    return json<ActionData>(\n      { errors: { email: \"Email is invalid\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json<ActionData>(\n      { errors: { password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json<ActionData>(\n      { errors: { password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const existingUser = await getUserByEmail(email);\n  if (existingUser) {\n    return json<ActionData>(\n      { errors: { email: \"A user already exists with this email\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await createUser(email, password);\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: false,\n    redirectTo,\n  });\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Sign Up\",\n  };\n};\n\nexport default function Join() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") ?? undefined;\n  const actionData = useActionData() as ActionData;\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center\">\n      <div className=\"mx-auto w-full max-w-md px-8\">\n        <Form method=\"post\" className=\"space-y-6\" noValidate>\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Email address\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.email && (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.password && (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Create Account\n          </button>\n          <div className=\"flex items-center justify-center\">\n            <div className=\"text-center text-sm text-gray-500\">\n              Already have an account?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/login\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Log in\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { createUser } from \"~/models/user.server\";\nimport { createUserSession } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  if (process.env.NODE_ENV === \"production\") {\n    console.error(\n      \"\uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 test routes should not be enabled in production \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8\"\n    );\n    // test routes should not be enabled in production or without\n    // enable test routes... Just in case this somehow slips through\n    // we'll redirect :)\n    return redirect(\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\");\n  }\n\n  const { email } = await request.json();\n  if (!email) {\n    throw new Error(\"email required for login\");\n  }\n  if (!email.endsWith(\"@example.com\")) {\n    throw new Error(\"All test emails must end in @example.com\");\n  }\n\n  const user = await createUser(email, \"myreallystrongpassword\");\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: true,\n    redirectTo: \"/\",\n  });\n};\n\nexport default null;\n", "export default {'version':'73342ffc','entry':{'module':'/_static/build/entry.client-REGJP544.js','imports':['/_static/build/_shared/chunk-S4UJRYFJ.js','/_static/build/_shared/chunk-HRTTMHIP.js']},'routes':{'../cypress/support/test-routes/create-user':{'id':'../cypress/support/test-routes/create-user','parentId':'root','path':'__tests/create-user','index':undefined,'caseSensitive':undefined,'module':'/_static/build/_.._/cypress/support/test-routes/create-user-ILCPLJ3F.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/_static/build/root-PAFGWSAF.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/index-DVSSEZXE.js','imports':['/_static/build/_shared/chunk-4FJRCESF.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/join':{'id':'routes/join','parentId':'root','path':'join','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/join-BSBWR637.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/login-3RL42M53.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/logout-PB4Y6XZM.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/mag/new':{'id':'routes/mag/new','parentId':'root','path':'mag/new','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/mag/new-7QHNTSUN.js','imports':['/_static/build/_shared/chunk-4FJRCESF.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes':{'id':'routes/notes','parentId':'root','path':'notes','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/notes-BJHXTXIP.js','imports':['/_static/build/_shared/chunk-4FJRCESF.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/$noteId':{'id':'routes/notes/$noteId','parentId':'routes/notes','path':':noteId','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/notes/$noteId-5L3BERBL.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/notes/index':{'id':'routes/notes/index','parentId':'routes/notes','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/notes/index-AIMC7YEE.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/new':{'id':'routes/notes/new','parentId':'routes/notes','path':'new','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/notes/new-5U23DQK6.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/story/new':{'id':'routes/story/new','parentId':'root','path':'story/new','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/story/new-DLJOO4AT.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'hmr':undefined,'url':'/_static/build/manifest-73342FFC.js'};"],
  "mappings": "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",
  "names": ["isbot", "import_node", "import_react", "import_node", "import_tiny_invariant", "arc", "bcrypt", "invariant", "bcrypt", "invariant", "import_jsx_dev_runtime", "loader", "import_node", "import_react", "import_functions", "arc", "cuid", "arc", "import_node", "cloudinary", "import_jsx_dev_runtime", "loader", "composeUploadHandlers", "createMemoryUploadHandler", "parseMultipartFormData", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "_k", "_l", "_m", "_n", "_o", "_p", "_q", "_r", "_s", "_t", "new_exports", "action", "loader", "import_node", "import_react", "React", "import_react", "route", "import_jsx_dev_runtime", "action", "composeUploadHandlers", "createMemoryUploadHandler", "parseMultipartFormData", "loader", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "action", "loader", "import_node", "action", "loader", "import_react", "import_jsx_dev_runtime", "action", "loader", "meta", "import_node", "import_react", "React", "import_jsx_dev_runtime", "loader", "action", "meta", "_a", "_b", "_c", "_d", "loader", "import_node", "import_react", "import_functions", "import_cuid", "arc", "cuid", "import_jsx_dev_runtime", "loader", "action", "loader", "import_node", "import_react", "import_tiny_invariant", "import_jsx_dev_runtime", "loader", "invariant", "action", "notes_exports", "import_react", "import_jsx_dev_runtime", "new_exports", "action", "import_node", "import_react", "React", "import_jsx_dev_runtime", "action", "_a", "_b", "_c", "_d", "action", "loader", "meta", "import_node", "import_react", "React", "import_jsx_dev_runtime", "loader", "action", "meta", "_a", "_b", "_c", "_d", "action", "import_node", "action", "new_exports", "notes_exports"]
}
