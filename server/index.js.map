{
  "version": 3,
  "sources": ["../mocks/index.js", "../server.ts", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "../app/root.tsx", "../app/session.server.ts", "../app/models/user.server.ts", "../app/models/theme.server.ts", "../app/theme.tsx", "../app/routes/stories/$storyId/edit.tsx", "../app/models/magazine.server.ts", "../app/routes/tags/$storyId/new.tsx", "../app/routes/mag/$magId/edit.tsx", "../app/routes/mag/$mag/index.tsx", "../app/components/StoryCard.tsx", "../app/routes/stories/random.tsx", "../app/routes/stories/$tag.tsx", "../app/routes/tags/index.tsx", "../app/routes/mag/index.tsx", "../app/components/MagCard.tsx", "../app/routes/story/new.tsx", "../app/models/utils.server.ts", "../app/routes/mag/new.tsx", "../app/utils.ts", "../app/routes/logout.tsx", "../app/routes/about.tsx", "../app/routes/index.tsx", "../app/routes/login.tsx", "../app/routes/notes.tsx", "../app/models/note.server.ts", "../app/routes/notes/$noteId.tsx", "../app/routes/notes/index.tsx", "../app/routes/notes/new.tsx", "../app/routes/chat.tsx", "../app/components/ChatGPT.tsx", "../app/routes/join.tsx", "../cypress/support/test-routes/create-user.ts", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["const { setupServer } = require(\"msw/node\");\n\nconst server = setupServer();\n\nserver.listen({ onUnhandledRequest: \"bypass\" });\n\nprocess.once(\"SIGINT\", () => server.close());\nprocess.once(\"SIGTERM\", () => server.close());\n", "import { createRequestHandler } from \"@remix-run/architect\";\nimport * as build from \"@remix-run/dev/server-build\";\n\nif (process.env.NODE_ENV !== \"production\") {\n  require(\"./mocks\");\n}\n\nexport const handler = createRequestHandler({\n  build,\n  mode: process.env.NODE_ENV,\n});\n", "\nimport * as entryServer from \"/Users/msavast1/developer/other/grundge/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/stories/$storyId/edit.tsx\";\nimport * as route2 from \"./routes/tags/$storyId/new.tsx\";\nimport * as route3 from \"./routes/mag/$magId/edit.tsx\";\nimport * as route4 from \"./routes/mag/$mag/index.tsx\";\nimport * as route5 from \"./routes/stories/random.tsx\";\nimport * as route6 from \"./routes/stories/$tag.tsx\";\nimport * as route7 from \"./routes/tags/index.tsx\";\nimport * as route8 from \"./routes/mag/index.tsx\";\nimport * as route9 from \"./routes/story/new.tsx\";\nimport * as route10 from \"./routes/mag/new.tsx\";\nimport * as route11 from \"./routes/logout.tsx\";\nimport * as route12 from \"./routes/about.tsx\";\nimport * as route13 from \"./routes/index.tsx\";\nimport * as route14 from \"./routes/login.tsx\";\nimport * as route15 from \"./routes/notes.tsx\";\nimport * as route16 from \"./routes/notes/$noteId.tsx\";\nimport * as route17 from \"./routes/notes/index.tsx\";\nimport * as route18 from \"./routes/notes/new.tsx\";\nimport * as route19 from \"./routes/chat.tsx\";\nimport * as route20 from \"./routes/join.tsx\";\nimport * as route21 from \"./../cypress/support/test-routes/create-user.ts\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_cssModules\":false,\"unstable_cssSideEffectImports\":false,\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"unstable_vanillaExtract\":false,\"v2_errorBoundary\":false,\"v2_meta\":false,\"v2_routeConvention\":false};\n  export const publicPath = \"/_static/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/stories/$storyId/edit\": {\n      id: \"routes/stories/$storyId/edit\",\n      parentId: \"root\",\n      path: \"stories/:storyId/edit\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/tags/$storyId/new\": {\n      id: \"routes/tags/$storyId/new\",\n      parentId: \"root\",\n      path: \"tags/:storyId/new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/mag/$magId/edit\": {\n      id: \"routes/mag/$magId/edit\",\n      parentId: \"root\",\n      path: \"mag/:magId/edit\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/mag/$mag/index\": {\n      id: \"routes/mag/$mag/index\",\n      parentId: \"root\",\n      path: \"mag/:mag\",\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/stories/random\": {\n      id: \"routes/stories/random\",\n      parentId: \"root\",\n      path: \"stories/random\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/stories/$tag\": {\n      id: \"routes/stories/$tag\",\n      parentId: \"root\",\n      path: \"stories/:tag\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/tags/index\": {\n      id: \"routes/tags/index\",\n      parentId: \"root\",\n      path: \"tags\",\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/mag/index\": {\n      id: \"routes/mag/index\",\n      parentId: \"root\",\n      path: \"mag\",\n      index: true,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/story/new\": {\n      id: \"routes/story/new\",\n      parentId: \"root\",\n      path: \"story/new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/mag/new\": {\n      id: \"routes/mag/new\",\n      parentId: \"root\",\n      path: \"mag/new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/about\": {\n      id: \"routes/about\",\n      parentId: \"root\",\n      path: \"about\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/notes\": {\n      id: \"routes/notes\",\n      parentId: \"root\",\n      path: \"notes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/notes/$noteId\": {\n      id: \"routes/notes/$noteId\",\n      parentId: \"routes/notes\",\n      path: \":noteId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/notes/index\": {\n      id: \"routes/notes/index\",\n      parentId: \"routes/notes\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/notes/new\": {\n      id: \"routes/notes/new\",\n      parentId: \"routes/notes\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/chat\": {\n      id: \"routes/chat\",\n      parentId: \"root\",\n      path: \"chat\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/join\": {\n      id: \"routes/join\",\n      parentId: \"root\",\n      path: \"join\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route20\n    },\n  \"../cypress/support/test-routes/create-user\": {\n      id: \"../cypress/support/test-routes/create-user\",\n      parentId: \"root\",\n      path: \"__tests/create-user\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route21\n    }\n  };", "import { PassThrough } from \"stream\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const callbackName = isbot(request.headers.get(\"user-agent\"))\n    ? \"onAllReady\"\n    : \"onShellReady\";\n\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        [callbackName]: () => {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: didError ? 500 : responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError: (err: unknown) => {\n          reject(err);\n        },\n        onError: (error: unknown) => {\n          didError = true;\n\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type {\n  LinksFunction,\n  LoaderArgs,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData,\n} from \"@remix-run/react\";\n\nimport tailwindStylesheetUrl from \"./styles/tailwind.css\";\nimport { getUser } from \"./session.server\";\nimport { getThemeSession } from \"./models/theme.server\";\nimport { ThemeProvider } from \"./theme\";\nimport { useState } from \"react\";\n\nexport const links: LinksFunction = () => {\n  return [\n    { rel: \"stylesheet\", href: tailwindStylesheetUrl },\n    // NOTE: Architect deploys the public directory to /_static/\n    { rel: \"icon\", href: \"/_static/favicon.ico\" },\n  ];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"FSF\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\n\nexport async function loader({ request }: LoaderArgs) {\n  const user = await getUser(request);\n  const themeSession = await getThemeSession(request);\n  const admin = user?.email === process.env.ADMIN;\n  return json({\n    user,\n    admin,\n    theme: themeSession.getTheme(),\n  });\n}\n\nfunction App() {\n  const [showMenu, setShowMenu] = useState(false);\n  return (\n    <html lang=\"en\" data-theme={'garden'}>\n      <head>\n        <Meta />\n        <Links />\n        <script src=\"https://polyfill.io/v3/polyfill.min.js?features=default\"></script>\n      </head>\n      <body className=\"h-screen w-screen\">\n\n        <Outlet context={[showMenu, setShowMenu]} />\n\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n// export default function App() {\n//   return (\n//     <html lang=\"en\" className=\"h-full\">\n//       <head>\n//         <Meta />\n//         <Links />\n//       </head>\n//       <body className=\"h-full\">\n//         <Outlet />\n//         <ScrollRestoration />\n//         <Scripts />\n//         <LiveReload />\n//       </body>\n//     </html>\n//   );\n// }\nexport default function AppWithProviders() {\n  const data = useLoaderData<typeof loader>();\n\n  return (\n    <ThemeProvider specifiedTheme={data.theme}>\n      <App />\n    </ThemeProvider>\n  );\n}\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\nimport type { User } from \"~/models/user.server\";\nimport { getUserById } from \"~/models/user.server\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nconst USER_SESSION_KEY = \"userId\";\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get(\"Cookie\");\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function getUserId(\n  request: Request\n): Promise<User[\"id\"] | undefined> {\n  const session = await getSession(request);\n  const userId = session.get(USER_SESSION_KEY);\n  return userId;\n}\n\nexport async function getUser(request: Request) {\n  const userId = await getUserId(request);\n  if (userId === undefined) return null;\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n) {\n  const userId = await getUserId(request);\n  if (!userId) {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  return userId;\n}\n\nexport async function requireUser(request: Request) {\n  const userId = await requireUserId(request);\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function createUserSession({\n  request,\n  userId,\n  remember,\n  redirectTo,\n}: {\n  request: Request;\n  userId: string;\n  remember: boolean;\n  redirectTo: string;\n}) {\n  const session = await getSession(request);\n  session.set(USER_SESSION_KEY, userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\n        maxAge: remember\n          ? 60 * 60 * 24 * 7 // 7 days\n          : undefined,\n      }),\n    },\n  });\n}\n\nexport async function logout(request: Request) {\n  const session = await getSession(request);\n  return redirect(\"/\", {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\n    },\n  });\n}\n", "import arc from \"@architect/functions\";\nimport bcrypt from \"bcryptjs\";\nimport invariant from \"tiny-invariant\";\n\nexport type User = { id: `email#${string}`; email: string };\nexport type Password = { password: string };\n\nexport async function getUserById(id: User[\"id\"]): Promise<User | null> {\n  const db = await arc.tables();\n  const result = await db.user.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": id },\n  });\n\n  const [record] = result.Items;\n  if (record) return { id: record.pk, email: record.email };\n  return null;\n}\n\nexport async function getUserByEmail(email: User[\"email\"]) {\n  return getUserById(`email#${email}`);\n}\n\nasync function getUserPasswordByEmail(email: User[\"email\"]) {\n  const db = await arc.tables();\n  const result = await db.password.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": `email#${email}` },\n  });\n\n  const [record] = result.Items;\n\n  if (record) return { hash: record.password };\n  return null;\n}\n\nexport async function createUser(\n  email: User[\"email\"],\n  password: Password[\"password\"]\n) {\n  const hashedPassword = await bcrypt.hash(password, 10);\n  const db = await arc.tables();\n  await db.password.put({\n    pk: `email#${email}`,\n    password: hashedPassword,\n  });\n\n  await db.user.put({\n    pk: `email#${email}`,\n    email,\n  });\n\n  const user = await getUserByEmail(email);\n  invariant(user, `User not found after being created. This should not happen`);\n\n  return user;\n}\n\nexport async function deleteUser(email: User[\"email\"]) {\n  const db = await arc.tables();\n  await db.password.delete({ pk: `email#${email}` });\n  await db.user.delete({ pk: `email#${email}` });\n}\n\nexport async function verifyLogin(\n  email: User[\"email\"],\n  password: Password[\"password\"]\n) {\n  const userPassword = await getUserPasswordByEmail(email);\n\n  if (!userPassword) {\n    return undefined;\n  }\n\n  const isValid = await bcrypt.compare(password, userPassword.hash);\n  if (!isValid) {\n    return undefined;\n  }\n\n  return getUserByEmail(email);\n}\n", "import { createCookieSessionStorage } from \"@remix-run/node\";\n\nimport { isTheme } from \"../theme\";\nimport type { Theme } from \"../theme\";\n\n// Make use to set the environment variable SESSION_SECRET before running the code\nconst sessionSecret = process.env.SESSION_SECRET ?? \"DEFAULT_SECRET\";\n\nconst themeStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"my_remix_theme\",\n    secure: true,\n    secrets: [sessionSecret],\n    sameSite: \"lax\",\n    path: \"/\",\n    httpOnly: true,\n  },\n});\n\nasync function getThemeSession(request: Request) {\n  const session = await themeStorage.getSession(request.headers.get(\"Cookie\"));\n  return {\n    getTheme: () => {\n      const themeValue = session.get(\"theme\");\n      return isTheme(themeValue) ? themeValue : null;\n    },\n    setTheme: (theme: Theme) => session.set(\"theme\", theme),\n    commit: () => themeStorage.commitSession(session),\n  };\n}\n\nexport { getThemeSession };", "import { useFetcher } from \"@remix-run/react\";\nimport type { Dispatch, ReactNode, SetStateAction } from \"react\";\nimport {\n  createContext,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\n\nenum Theme {\n  DARK = \"forest\",\n  LIGHT = \"garden\",\n}\nconst themes: Array<Theme> = Object.values(Theme);\n\ntype ThemeContextType = [Theme | null, Dispatch<SetStateAction<Theme | null>>];\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nfunction ThemeProvider({\n  children,\n  specifiedTheme,\n}: {\n  children: ReactNode;\n  specifiedTheme: Theme | null;\n}) {\n  const [theme, setTheme] = useState<Theme | null>(() => {\n    // On the server, if we don't have a specified theme then we should\n    // return null and the clientThemeCode will set the theme for us\n    // before hydration. Then (during hydration), this code will get the same\n    // value that clientThemeCode got so hydration is happy.\n    if (specifiedTheme) {\n      if (themes.includes(specifiedTheme)) {\n        return specifiedTheme;\n      } else {\n        return null;\n      }\n    }\n\n    // there's no way for us to know what the theme should be in this context\n    // the client will have to figure it out before hydration.\n    if (typeof document === \"undefined\") {\n      return null;\n    }\n\n    return specifiedTheme;\n  });\n\n  const persistTheme = useFetcher();\n  // TODO: remove this when persistTheme is memoized properly\n  const persistThemeRef = useRef(persistTheme);\n  useEffect(() => {\n    persistThemeRef.current = persistTheme;\n  }, [persistTheme]);\n\n  const mountRun = useRef(false);\n\n  useEffect(() => {\n    if (!mountRun.current) {\n      mountRun.current = true;\n      return;\n    }\n    if (!theme) {\n      return;\n    }\n\n    persistThemeRef.current.submit(\n      { theme },\n      { action: \"action/set-theme\", method: \"post\" }\n    );\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={[theme, setTheme]}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nfunction useTheme() {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n  return context;\n}\n\nfunction isTheme(value: unknown): value is Theme {\n  return typeof value === \"string\" && themes.includes(value as Theme);\n}\n\nexport {\n  isTheme,\n  Theme,\n  ThemeProvider,\n  useTheme,\n};", "import type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData, useLoaderData } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport type { Story} from \"~/models/magazine.server\";\nimport { getAllMags, getOneStory, updateStoryST } from \"~/models/magazine.server\";\nimport { requireUser } from \"~/session.server\";\n\nexport async function loader({ request, params }: LoaderArgs) {\n  const email = (await requireUser(request)).email;\n  if (process.env.ADMIN !== email) {\n    const searchParams = new URLSearchParams([\n      [\"redirectTo\", new URL(request.url).pathname],\n    ]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  const story = await getOneStory(params.storyId);\n\n  const magazineItems = await getAllMags();\n  return { story, magazineItems };\n}\n\nexport async function action({ request, params }: ActionArgs) {\n  await requireUser(request);\n  const clonedData = request.clone();\n  const formDatas = await clonedData.formData();\n  const id = params.storyId || \"\";\n  const { _action } = Object.fromEntries(formDatas);\n  if (_action === \"update\") {\n    const pubDate = formDatas.get(\"pubDate\");\n    const volume = formDatas.get(\"volume\");\n    const mag = formDatas.get(\"mag\");\n    const name = formDatas.get(\"name\");\n    const author = formDatas.get(\"author\");\n    const excerpt = formDatas.get(\"excerpt\");\n    const img = formDatas.get(\"img\");\n    const url = formDatas.get(\"url\");\n    const words = parseInt(formDatas.get(\"words\") as string);\n\n    if (typeof name !== \"string\" || name.length === 0) {\n      return json(\n        {\n          errors: {\n            name: \"name needed\",\n            url: null,\n            img: null,\n            pubDate: null,\n            volume: null,\n            mag: null,\n            author: null,\n            words: null,\n            excerpt: null,\n          },\n        },\n        { status: 400 }\n      );\n    }\n\n    if (!pubDate) {\n      return json(\n        {\n          errors: {\n            name: null,\n            url: null,\n            img: null,\n            pubDate: \"Date needed\",\n            volume: null,\n            mag: null,\n            author: null,\n            words: null,\n            excerpt: null,\n          },\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof url !== \"string\" || url.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            url: \"url needed\",\n            img: null,\n            pubDate: null,\n            volume: null,\n            mag: null,\n            author: null,\n            words: null,\n            excerpt: null,\n          },\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof img !== \"string\" || img.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            img: \"img is required\",\n            url: null,\n            pubDate: null,\n            mag: null,\n            author: null,\n            words: null,\n            excerpt: null,\n            volume: null,\n          },\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof mag !== \"string\" || mag.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            url: null,\n            img: null,\n            pubDate: null,\n            volume: null,\n            mag: \"Magazine needed\",\n            author: null,\n            words: null,\n            excerpt: null,\n          },\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof author !== \"string\" || author.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            url: null,\n            img: null,\n            pubDate: null,\n            volume: null,\n            mag: null,\n            author: \"Author needed\",\n            words: null,\n            excerpt: null,\n          },\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof excerpt !== \"string\" || excerpt.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            url: null,\n            img: null,\n            pubDate: null,\n            volume: null,\n            mag: null,\n            author: null,\n            words: null,\n            excerpt: \"Excerpt needed\",\n          },\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof words !== \"number\" || !words) {\n      return json(\n        {\n          errors: {\n            name: null,\n            words: \"words needed\",\n            pubDate: null,\n            url: null,\n            img: null,\n            volume: null,\n            mag: null,\n            author: null,\n            excerpt: null,\n          },\n        },\n        { status: 400 }\n      );\n    }\n\n    const story = await getOneStory(params.storyId);\n    await updateStoryST({\n      id,\n      name,\n      url,\n      img,\n      author,\n      pubDate,\n      volume,\n      mag: mag,\n      excerpt,\n      words,\n      tags: story.tags\n    } as Story)\n\n    return redirect(`/`);\n  }\n  return redirect(`/stories/${params.storyId}/edit`);\n}\n\nexport default function EditStoryPage() {\n  const data = useLoaderData<typeof loader>();\n  const actionData = useActionData<typeof action>();\n\n  const nameRef = React.useRef<HTMLInputElement>(null);\n  const pubDateRef = React.useRef<HTMLInputElement>(null);\n  const urlRef = React.useRef<HTMLInputElement>(null);\n  const authorRef = React.useRef<HTMLInputElement>(null);\n  const imgRef = React.useRef<HTMLInputElement>(null);\n  const volumeRef = React.useRef<HTMLInputElement>(null);\n  const wordsRef = React.useRef<HTMLInputElement>(null);\n  const excerptRef = React.useRef<HTMLInputElement & HTMLTextAreaElement>(null);\n  const magRef = React.useRef<HTMLInputElement & HTMLSelectElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.name) {\n      nameRef.current?.focus();\n    } else if (actionData?.errors?.img) {\n      imgRef.current?.focus();\n    } else if (actionData?.errors?.pubDate) {\n      pubDateRef.current?.focus();\n    } else if (actionData?.errors?.url) {\n      urlRef.current?.focus();\n    } else if (actionData?.errors?.excerpt) {\n      excerptRef.current?.focus();\n    } else if (actionData?.errors?.volume) {\n      volumeRef.current?.focus();\n    } else if (actionData?.errors?.mag) {\n      magRef.current?.focus();\n    } else if (actionData?.errors?.words) {\n      wordsRef.current?.focus();\n    } else if (actionData?.errors?.author) {\n      authorRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div>\n      <h4 className=\"text-2xl\">Edit Story</h4>\n      <Form\n        method=\"post\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 8,\n          width: \"100%\",\n        }}\n      >\n        <div>\n          <input\n            defaultValue={data?.story?.name}\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            name=\"name\"\n            placeholder={\"Story Name\"}\n            ref={nameRef}\n            aria-invalid={actionData?.errors?.name ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.name ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.name && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.name}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <input\n            defaultValue={data?.story?.pubDate}\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            name=\"pubDate\"\n            placeholder={\"Date Published\"}\n            ref={pubDateRef}\n            aria-invalid={actionData?.errors?.pubDate ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.pubDate ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.pubDate && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.pubDate}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <input\n            defaultValue={data?.story?.author}\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            name=\"author\"\n            placeholder={\"Author\"}\n            ref={authorRef}\n            aria-invalid={actionData?.errors?.author ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.author ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.author && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.author}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <input\n            defaultValue={data?.story?.volume}\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            name=\"volume\"\n            placeholder={\"Volume\"}\n            ref={volumeRef}\n            aria-invalid={actionData?.errors?.volume ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.volume ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.volume && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.volume}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <input\n            defaultValue={data?.story?.words}\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            name=\"words\"\n            placeholder={\"Word Count\"}\n            ref={wordsRef}\n            aria-invalid={actionData?.errors?.words ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.words ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.words && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.words}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <textarea\n            defaultValue={data?.story?.excerpt}\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            placeholder={\"Excerpt\"}\n            ref={excerptRef}\n            name=\"excerpt\"\n            aria-invalid={actionData?.errors?.excerpt ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.excerpt ? \"body-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.excerpt && (\n            <div className=\"pt-1 text-red-700\" id=\"body-error\">\n              {actionData.errors.excerpt}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <input\n            defaultValue={data?.story?.url}\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            placeholder={\"URL\"}\n            name=\"url\"\n            ref={urlRef}\n            aria-invalid={actionData?.errors?.url ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.url ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.url && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.url}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <input\n            defaultValue={data?.story?.img}\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            placeholder={\"Img URL\"}\n            name=\"img\"\n            ref={imgRef}\n            aria-invalid={actionData?.errors?.img ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.img ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.img && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.img}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <select\n            defaultValue={data.story?.mag}\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            name=\"mag\"\n            ref={magRef}\n            aria-invalid={actionData?.errors?.mag ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.mag ? \"title-error\" : undefined\n            }\n          >\n            {data.magazineItems.map((m) => {\n              return (\n                <option\n                  key={m.id}\n                  value={m.name}\n                  defaultChecked={data.story?.mag === m.display}\n                >\n                  {m.display}\n                </option>\n              );\n            })}\n          </select>\n\n          {actionData?.errors?.mag && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.mag}\n            </div>\n          )}\n        </div>\n\n        <div className=\"text-left\">\n          <button type=\"submit\" name=\"_action\" value=\"update\" className=\"btn\">\n            Update\n          </button>\n        </div>\n      </Form>\n    </div>\n  );\n}\n", "import arc from \"@architect/functions\";\nimport cuid from \"cuid\";\n\nexport type Magazine = {\n  id?: string;\n  name: string;\n  display: string;\n  url: string;\n  desc: string;\n  img: string;\n}\n\nexport type StoryTag = {\n  id?: string;  // \n  storyId: ReturnType<typeof cuid>; // story cuid\n  tag: string;\n}\n\nexport type Tag = {\n  id?: string;\n  tag: string;\n}\n\nexport type Story = {\n  id: ReturnType<typeof cuid>;\n  volume: string;\n  name: string;\n  img: string;\n  author: string;\n  excerpt: string;\n  url: string;\n  words: number;\n  pubDate: string;\n  mag: Magazine['name'];\n  tags: Array<string>;\n}\n\nexport async function createStoryTagST({\n  tag,\n  storyId,\n}: StoryTag): Promise<StoryTag> {\n  // story#storyId\n  //  tag#tag\n  const db = await arc.tables();\n  const id = cuid();\n  const resultST = await db.magstorytag.put({\n    pk: `tag#${tag}`,\n    sk: `story#${storyId}`,\n    tag,\n    type: 'tag',\n    id: id\n  });\n\n  return {\n    id: id,\n    storyId: resultST.pk.replace(/^story#/, ''),\n    tag\n  };\n}\n\nexport async function createStoryST({\n  img,\n  volume,\n  name,\n  author,\n  excerpt,\n  url,\n  words,\n  pubDate,\n  mag,\n}: Story): Promise<Story> {\n  // pk mag#magId \n  // sk story#storyId\n  const db = await arc.tables();\n  const id = cuid();\n  const result = await db.magstorytag.put({\n    pk: `mag#${mag}`,\n    sk: `story#${id}`,\n    img,\n    volume,\n    name,\n    author,\n    excerpt,\n    url,\n    words,\n    pubDate,\n    id: id,\n    mag,\n    type: 'story',\n    tags: []\n  });\n  return {\n    id: id,\n    img: result.img,\n    volume: result.volume,\n    name: result.name,\n    mag: result.mag,\n    author: result.author,\n    excerpt: result.excerpt,\n    url: result.url,\n    words: result.words,\n    pubDate: result.pubDate,\n    tags: result.tags,\n  };\n}\n\nexport async function createMagazineST({\n  name,\n  display,\n  url,\n  desc,\n  img,\n}: Magazine): Promise<Magazine> {\n  // pk # mag#magId \n  // sk # meta#magId\n  const db = await arc.tables();\n  const id = cuid();\n  const result = await db.magstorytag.put({\n    pk: `mag#${name}`,\n    sk: `meta#${id}`,\n    name,\n    display,\n    url,\n    desc,\n    img,\n    id: id,\n    type: 'magazine',\n  });\n  return {\n    id: id,\n    name: result.name,\n    display: result.display,\n    url: result.url,\n    desc: result.desc,\n    img: result.img,\n  };\n}\n\nexport async function deleteStory({\n  id,\n  mag\n}: { id: string, mag: string }) {\n  const db = await arc.tables();\n  await db.magstorytag.delete({\n    pk: `mag#${mag}`,\n    sk: `story#${id}`,\n  })\n}\n\nexport async function deleteStoryTag({\n  storyId,\n  tag\n}: { storyId: string, tag: string }) {\n  const db = await arc.tables();\n  await db.magstorytag.delete({\n    pk: `tag#${tag}`,\n    sk: `story#${storyId}`,\n  })\n}\n\nexport async function deleteMag({\n  id,\n  mag\n}: { id: string, mag: string }) {\n  const db = await arc.tables();\n  await db.magstorytag.delete({\n    pk: `mag#${mag}`,\n    sk: `meta#${id}`,\n  })\n}\n\nexport async function updateStoryST({\n  id,\n  img,\n  volume,\n  name,\n  author,\n  excerpt,\n  url,\n  words,\n  pubDate,\n  mag,\n  tags,\n}: Story) {\n  const db = await arc.tables();\n  db.magstorytag.update({\n    Key: {\n      pk: `mag#${mag}`,\n      sk: `story#${id}`,\n    },\n    UpdateExpression: 'SET #id = :id, #img = :img, #volume = :volume, #name = :name, #author = :author, #excerpt = :excerpt, #url = :url, #words = :words, #pubDate = :pubDate, #mag = :mag, #tags = :tags',\n    ExpressionAttributeNames: {\n      '#id': 'id',\n      '#img': 'img',\n      '#volume': 'volume',\n      '#name': 'name',\n      '#author': 'author',\n      '#excerpt': 'excerpt',\n      '#url': 'url',\n      '#words': 'words',\n      '#pubDate': 'pubDate',\n      '#mag': 'mag',\n      '#tags': 'tags',\n    },\n    ExpressionAttributeValues: {\n      ':id': id,\n      ':img': img,\n      ':volume': volume,\n      ':name': name,\n      ':author': author,\n      ':excerpt': excerpt,\n      ':url': url,\n      ':words': words,\n      ':pubDate': pubDate,\n      ':mag': mag,\n      ':tags': tags,\n    },\n  });\n}\n\nexport async function updateMagST({\n  id,\n  img,\n  desc,\n  name,\n  display,\n  url,\n}: Magazine) {\n  const db = await arc.tables();\n  db.magstorytag.update({\n    Key: {\n      pk: `mag#${name}`,\n      sk: `meta#${id}`,\n    },\n    UpdateExpression: 'SET #id = :id, #img = :img, #name = :name, #url = :url, #desc = :desc, #display = :display',\n    ExpressionAttributeNames: {\n      '#id': 'id',\n      '#img': 'img',\n      '#desc': 'desc',\n      '#name': 'name',\n      '#display': 'display',\n      '#url': 'url',\n    },\n    ExpressionAttributeValues: {\n      ':id': id,\n      ':img': img,\n      ':desc': desc,\n      ':name': name,\n      ':display': display,\n      ':url': url,\n    }\n  });\n}\n\nexport async function createTagST({\n  tag,\n}: Tag): Promise<Tag> {\n  // pk tag#tag \n  // sk meta#tagId\n  const db = await arc.tables();\n  const id = cuid();\n  const result = await db.magstorytag.put({\n    pk: `tag#${tag}`,\n    sk: `meta#${id}`,\n    tag,\n    type: 'tag',\n  });\n  return {\n    id: id,\n    tag: result.tag,\n  };\n}\n\nasync function queryTable(partitionKey: string, sortKeyPrefix: string) {\n  const data = await arc.tables()\n  const result = await data['magstorytag'].query({\n    KeyConditionExpression: '#partitionKey = :partitionKey and begins_with(#sortKey, :sortKeyPrefix)',\n    ExpressionAttributeNames: {\n      '#partitionKey': 'pk',\n      '#sortKey': 'sk'\n    },\n    ExpressionAttributeValues: {\n      ':partitionKey': partitionKey,\n      ':sortKeyPrefix': sortKeyPrefix\n    }\n  })\n  return result.Items\n}\n\nasync function queryIndex(partitionKey: string, sortKeyPrefix: string) {\n  const data = await arc.tables()\n  const result = await data['magstorytag'].query({\n    IndexName: 'tagstories',\n    KeyConditionExpression: '#partitionKey = :partitionKey and begins_with(#sortKey, :sortKeyPrefix)',\n    ExpressionAttributeNames: {\n      '#partitionKey': 'sk',\n      '#sortKey': 'pk'\n    },\n    ExpressionAttributeValues: {\n      ':partitionKey': partitionKey,\n      ':sortKeyPrefix': sortKeyPrefix\n    }\n  })\n  return result.Items\n}\n\nasync function scanIndex() {\n  const data = await arc.tables()\n  const result = await data['magstorytag'].scan({})\n  return result.Items\n}\n\nasync function queryAllByTypeUnique(partitionKey: string, uniqueAttribute: string) {\n  const data = await arc.tables()\n  const result = await data['magstorytag'].query({\n    IndexName: 'byType',\n    KeyConditionExpression: '#partitionKey = :partitionKey',\n    ExpressionAttributeNames: {\n      '#partitionKey': 'type'\n    },\n    ExpressionAttributeValues: {\n      ':partitionKey': partitionKey\n    }\n  })\n\n  const uniqueValues = new Set()\n  const uniqueItems = result.Items.filter(item => {\n    if (uniqueValues.has(item[uniqueAttribute])) {\n      return false\n    } else {\n      uniqueValues.add(item[uniqueAttribute])\n      return true\n    }\n  })\n\n  return uniqueItems\n}\n\nexport async function getAllMags() {\n  const mags = await queryAllByTypeUnique('magazine', 'sk')\n  return mags;\n}\n\nexport async function getAllStories() {\n  const stories = await queryAllByTypeUnique('story', 'sk')\n  return stories;\n}\n\nexport async function getAllTags() {\n  const tags = await queryAllByTypeUnique('tag', 'tag')\n  return tags;\n}\n\nexport async function getOneMag(magId: string | undefined) {\n  const mag = await queryTable(`mag#${magId}`, 'meta#') as unknown as Magazine[]\n  return mag[0];\n}\n\nexport async function getOneStory(storyId: string | undefined): Promise<Story> {\n  const st = await queryIndex(`story#${storyId}`, 'mag#') as unknown as Story[];\n  return st[0];\n}\n\nexport async function getAllMagStories(mag: string) {\n  const items = await queryTable(`mag#${mag}`, 'story#')\n  return items;\n}\n\nexport async function scan() {\n  const stories = await scanIndex()\n  return stories;\n}\n\nexport async function getStoriesByTag(tagId: string | undefined) {\n  const stories = await queryTableWithUniqueAttribute(`tag#${tagId}`, 'story#', 'pk')\n  return stories;\n}\n\nasync function queryTableWithUniqueAttribute(partitionKey: string, sortKeyPrefix: string, uniqueAttribute: string) {\n  const data = await arc.tables()\n  const result = await data['magstorytag'].query({\n    KeyConditionExpression: '#partitionKey = :partitionKey and begins_with(#sortKey, :sortKeyPrefix)',\n    ExpressionAttributeNames: {\n      '#partitionKey': 'pk',\n      '#sortKey': 'sk'\n    },\n    ExpressionAttributeValues: {\n      ':partitionKey': partitionKey,\n      ':sortKeyPrefix': sortKeyPrefix\n    }\n  })\n\n  const uniqueValues = new Set()\n  const uniqueItems = result.Items.filter(item => {\n    if (uniqueValues.has(item[uniqueAttribute])) {\n      return false\n    } else {\n      uniqueValues.add(item[uniqueAttribute])\n      return true\n    }\n  })\n\n  return uniqueItems\n}\n\nexport async function queryIndexWithUniqueAttribute(partitionKey: string, sortKeyPrefix: string, uniqueAttribute: string) {\n  const data = await arc.tables()\n\n  const result = await data['magstorytag'].query({\n    IndexName: 'tagstories',\n    KeyConditionExpression: '#partitionKey = :partitionKey and begins_with(#sortKey, :sortKeyPrefix)',\n    ExpressionAttributeNames: {\n      '#partitionKey': 'sk',\n      '#sortKey': 'pk'\n    },\n    ExpressionAttributeValues: {\n      ':partitionKey': partitionKey,\n      ':sortKeyPrefix': sortKeyPrefix\n    }\n  })\n\n  const uniqueValues = new Set()\n  const uniqueItems = result.Items.filter(item => {\n    if (uniqueValues.has(item[uniqueAttribute])) {\n      return false\n    } else {\n      uniqueValues.add(item[uniqueAttribute])\n      return true\n    }\n  })\n\n  return uniqueItems\n}", "import type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport { redirect, json } from \"@remix-run/node\";\nimport { requireUserId } from \"~/session.server\";\n\nimport {\n  Form,\n  useActionData,\n  useLoaderData,\n  useTransition,\n} from \"@remix-run/react\";\nimport * as React from \"react\";\nimport type { Tag} from \"~/models/magazine.server\";\nimport {\n  createStoryTagST,\n  deleteStoryTag,\n  updateStoryST,\n  getOneStory,\n  createTagST\n} from \"~/models/magazine.server\";\n\nexport async function loader({ params, request }: LoaderArgs) {\n  await requireUserId(request);\n  const story = await getOneStory(params.storyId);\n  return json({ story });\n}\n\nexport async function action({ request, params }: ActionArgs) {\n  await requireUserId(request);\n  const formData = await request.formData();\n  const tg = formData.get(\"tag\")?.toString().toLowerCase().trim();\n  const storyId = params.storyId || \"\";\n  const { _action } = Object.fromEntries(formData);\n  const story = await getOneStory(params.storyId);\n  if (_action.toString().includes(\"delete\")) {\n    const tag = _action.toString().replace(\"delete-\", \"\");\n    story.tags = story.tags.filter((t) => t !== tag)\n    await updateStoryST(story)\n    await deleteStoryTag({storyId, tag});\n    return redirect(`/tags/${params.storyId}/new`);\n  } else {\n    if (typeof tg !== \"string\" || tg.length === 0) {\n      return json(\n        {\n          errors: {\n            tag: \"tag is required\",\n          },\n        },\n        { status: 400 }\n      );\n    }\n\n    if (tg.indexOf(\" \") >= 0) {\n      return json(\n        {\n          errors: {\n            tag: \"tag cannot have whitespace\",\n          },\n        },\n        { status: 400 }\n      );\n    }\n\n    if (/[\\s~`!@#$%\\^&*+=\\\\[\\]\\\\';,/{}|\\\\\":<>\\?()\\._]/g.test(tg)) {\n      return json(\n        {\n          errors: {\n            tag: \"tag should only include [A-Za-z] or [0-9] or -\",\n          },\n        },\n        { status: 400 }\n      );\n    }\n\n    story.tags.push(tg);\n    await updateStoryST(story)\n    await createTagST({ tag: tg } as Tag);\n\n    await createStoryTagST({\n      tag: tg,\n      storyId: storyId\n    });\n     \n    return redirect(`/tags/${storyId}/new`);\n   \n  }\n}\n\nexport default function NewTagPage() {\n  const data = useLoaderData<typeof loader>();\n  const actionData = useActionData<typeof action>();\n  let formRef = React.useRef<HTMLFormElement>(null);\n  const tagRef = React.useRef<HTMLInputElement>(null);\n  let transition = useTransition();\n  let isAdding =\n    transition.state === \"submitting\" &&\n    transition.submission.formData.get(\"_action\") === \"create\";\n  React.useEffect(() => {\n    if (actionData?.errors?.tag) {\n      tagRef.current?.focus();\n    }\n  }, [actionData]);\n\n  React.useEffect(() => {\n    if (!isAdding) {\n      formRef.current?.reset();\n    }\n  }, [isAdding]);\n\n  return (\n    <div >\n      <h3 className=\"text-4xl\">Story Tags</h3>\n      <h5 className=\"text-2xl\">{data.story?.name}</h5>\n\n      {data?.story?.tags?.map((t) => {\n        return (\n          <div key={t}>\n            <Form  method=\"delete\">\n              <span  className=\"text-3lg\">{t.toUpperCase()}</span>\n              <button\n                \n                className=\"btn-sm btn-circle btn m-2 bg-red-500\"\n                type=\"submit\"\n                name=\"_action\"\n                value={`delete-${t}`}\n                \n              >\n                X\n              </button>\n            </Form>\n          </div>\n        );\n      })}\n\n      <Form ref={formRef} method=\"post\">\n        <input\n          className=\"input-bordered input m-2 w-full max-w-xs\"\n          ref={tagRef}\n          name=\"tag\"\n          autoFocus\n          type=\"text\"\n          aria-invalid={actionData?.errors?.tag ? true : undefined}\n          aria-errormessage={\n            actionData?.errors?.tag ? \"title-error\" : undefined\n          }\n        />\n        {actionData?.errors?.tag && <div>{actionData.errors.tag}</div>}\n        <div className=\"text-left\">\n          <button\n            className=\"btn\"\n            name=\"_action\"\n            value=\"create\"\n            type=\"submit\"\n            disabled={isAdding}\n          >\n            Add\n          </button>\n        </div>\n      </Form>\n    </div>\n  );\n}\n", "import type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData, useLoaderData } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport type { Magazine} from \"~/models/magazine.server\";\nimport { getOneMag, updateMagST } from \"~/models/magazine.server\";\nimport { requireUser } from \"~/session.server\";\n\nexport async function loader({ request, params }: LoaderArgs) {\n  const email = (await requireUser(request)).email;\n  if (process.env.ADMIN !== email) {\n    const searchParams = new URLSearchParams([\n      [\"redirectTo\", new URL(request.url).pathname],\n    ]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  const mag = await getOneMag(params.magId);\n  return { mag };\n}\n\nexport async function action({ request, params }: ActionArgs) {\n  await requireUser(request);\n  const clonedData = request.clone();\n  const formDatas = await clonedData.formData();\n  const { _action } = Object.fromEntries(formDatas);\n  if (_action === \"update\") {\n    const name = formDatas.get(\"name\");\n    const display = formDatas.get(\"display\");\n    const url = formDatas.get(\"url\");\n    const desc = formDatas.get(\"desc\");\n    const img = formDatas.get(\"img\");\n\n    if (typeof display !== \"string\" || display.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            desc: null,\n            display: \"display is required\",\n            url: null,\n            img: null,\n          },\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof name !== \"string\" || name.length === 0) {\n      return json(\n        {\n          errors: {\n            name: \"Name is required\",\n            desc: null,\n            display: null,\n            url: null,\n            img: null,\n          },\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof url !== \"string\" || url.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            url: \"url is required\",\n            display: null,\n            desc: null,\n            img: null,\n          },\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof desc !== \"string\" || desc.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            desc: \"desc is required\",\n            display: null,\n            url: null,\n            img: null,\n          },\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof img !== \"string\" || img.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            img: \"img is required\",\n            display: null,\n            url: null,\n            desc: null,\n          },\n        },\n        { status: 400 }\n      );\n    }\n\n    const mag = await getOneMag(params.magId);\n    await updateMagST\n    ({\n      id: mag.id,\n      name,\n      url,\n      img,\n      display,\n      desc,\n    } as Magazine)\n\n    return redirect(`/`);\n  }\n  return redirect(`/mag/${params.magId}/edit`);\n}\n\nexport default function EditMagPage() {\n  const data = useLoaderData<typeof loader>();\n  const actionData = useActionData<typeof action>();\n  const nameRef = React.useRef<HTMLInputElement>(null);\n  const descRef = React.useRef<HTMLInputElement>(null);\n  const urlRef = React.useRef<HTMLInputElement>(null);\n  const displayRef = React.useRef<HTMLInputElement>(null);\n  const imgRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.name) {\n      nameRef.current?.focus();\n    } else if (actionData?.errors?.desc) {\n      descRef.current?.focus();\n    } else if (actionData?.errors?.display) {\n      displayRef.current?.focus();\n    } else if (actionData?.errors?.url) {\n      urlRef.current?.focus();\n    } else if (actionData?.errors?.img) {\n      imgRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div>\n      <h4 className=\"text-2xl\">Edit Magazine</h4>\n      <Form method=\"post\">\n        <div>\n          <input\n            defaultValue={data?.mag.display}\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            name=\"display\"\n            placeholder={\"Display\"}\n            ref={displayRef}\n            aria-invalid={actionData?.errors?.display ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.display ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.display && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.display}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <input\n            defaultValue={data?.mag.name}\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            name=\"name\"\n            placeholder={\"Slug\"}\n            ref={nameRef}\n            aria-invalid={actionData?.errors?.name ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.name ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.name && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.name}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <input\n            defaultValue={data?.mag?.desc}\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            placeholder={\"Description\"}\n            ref={descRef}\n            name=\"desc\"\n            aria-invalid={actionData?.errors?.desc ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.desc ? \"body-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.desc && (\n            <div className=\"pt-1 text-red-700\" id=\"body-error\">\n              {actionData.errors.desc}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <input\n            defaultValue={data?.mag.url}\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            placeholder={\"URL\"}\n            name=\"url\"\n            ref={urlRef}\n            aria-invalid={actionData?.errors?.url ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.url ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.url && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.url}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <input\n            defaultValue={data?.mag.img}\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            placeholder={\"Img URL\"}\n            name=\"img\"\n            ref={imgRef}\n            aria-invalid={actionData?.errors?.img ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.img ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.img && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.img}\n            </div>\n          )}\n        </div>\n\n        <div className=\"text-left\">\n          <button type=\"submit\" name=\"_action\" value=\"update\" className=\"btn\">\n            Update\n          </button>\n        </div>\n      </Form>\n    </div>\n  );\n}\n", "import type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useCatch, useLoaderData, useRouteLoaderData } from \"@remix-run/react\";\nimport { deleteStory, getAllMagStories } from \"~/models/magazine.server\";\nimport { getUser, requireUserId } from \"~/session.server\";\nimport { StoryCard } from \"~/components/StoryCard\";\nimport type { RootData } from \"~/types\";\n\nexport async function loader({ request, params }: LoaderArgs) {\n  const storyItems = await getAllMagStories(params.mag || '');\n  storyItems.sort((a, b) => (a.pubDate < b.pubDate ? 1 : -1));\n  const user = (await getUser(request))?.email === process.env.ADMIN;\n  return json({ storyItems, user });\n}\n\nexport async function action({ request, params }: ActionArgs) {\n  await requireUserId(request);\n  const clonedData = request.clone();\n  const formDatas = await clonedData.formData();\n  const { _action } = Object.fromEntries(formDatas);\n  if (_action.toString().includes(\"delete\")) {\n    const storyId = _action.toString().replace(\"delete-\", \"\");\n    await deleteStory({id: storyId, mag: params.mag || ''});\n    return redirect(\"/\");\n  }\n  return null;\n}\n\nexport default function MagazineStoriesPage() {\n  const data = useLoaderData<typeof loader>();\n  const root = useRouteLoaderData(\"root\") as RootData;\n  return (\n    <>\n      {data.storyItems.map((s) => {\n        return (\n          <StoryCard\n            id={s.id}\n            key={s.id}\n            title={s.name}\n            author={s.author}\n            words={s.words}\n            excerpt={s.excerpt}\n            url={s.url}\n            tags={s.tags}\n            mag={s.mag}\n            date={s.pubDate}\n            issue={s.volume}\n            img={s.img}\n            admin={root?.admin}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return <div>An unexpected error occurred: {error.message}</div>;\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return <div>Mag not found</div>;\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import { Form, useNavigate } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport type { StoryProps } from \"~/types\";\n\nexport function StoryCard({\n  id,\n  title,\n  author,\n  words,\n  excerpt,\n  url,\n  tags,\n  mag,\n  date,\n  issue,\n  img,\n  admin,\n}: StoryProps) {\n  const d = new Date(date || \"\").toDateString();\n  const navigate = useNavigate();\n  return (\n    <div>\n      <section className=\"hidden sm:block\">\n        <div className=\"card card-side m-3 border border-solid bg-base-100 shadow-xl\">\n          <figure>\n            <img\n              src={img}\n              alt={title}\n              className=\"max-h-[300px] rounded-xl xs:hidden md:block\"\n            />\n          </figure>\n          <div className=\"card-body\">\n            <section className=\"flex flex-row justify-between\">\n              <h2 className=\"card-title p-1 font-extrabold italic hover:underline hover:opacity-60\">\n                <a href={url} rel=\"noreferrer\" target=\"_blank\">\n                  {title} <span className=\"text-xs\">(link)</span>\n                </a>\n              </h2>\n              <h2 className=\"card-title underline\">By {author}</h2>\n            </section>\n            <div className=\"rounded-lg border-4 p-3\">\n              <p className=\"text-lg font-medium xs:hidden md:block\">\n                {excerpt}...\n              </p>\n            </div>\n            <section className=\"flex flex-row justify-between\">\n              <h2 className=\"card-title pr-2 xs:hidden\">{words} words</h2>\n              <h2 className=\"card-title\">{d}</h2>\n              <h2 className=\"card-title\">\n                {mag?.toUpperCase()} {issue ? \":\" : null}{\" \"}\n                {issue ? \"Issue:\" : null} {issue}\n              </h2>\n            </section>\n            <section>\n              {tags?.map((t) => {\n                return (\n                  <button\n                    className=\"btn-outline btn-primary btn-sm btn m-1\"\n                    key={t}\n                    onClick={() => {\n                      navigate(`/stories/${t}`);\n                    }}\n                  >\n                    {t}\n                  </button>\n                );\n              })}\n              {admin && (\n                <button\n                  className=\"btn-sm btn-circle btn m-2 bg-lime-900 text-2xl\"\n                  onClick={() => navigate(`/tags/${id}/new`)}\n                >\n                  +\n                </button>\n              )}\n              {admin && (\n                <>\n                  <Form method=\"delete\">\n                    <button\n                      className=\"btn-sm btn-circle btn bg-red-600\"\n                      type=\"submit\"\n                      name=\"_action\"\n                      value={`delete-${id}`}\n                    >\n                      X\n                    </button>\n                  </Form>\n                  <button\n                    className=\"btn-sm btn\"\n                    onClick={() => navigate(`/stories/${id}/edit`)}\n                  >\n                    edit\n                  </button>\n                </>\n              )}\n            </section>\n          </div>\n        </div>\n      </section>\n      <section className=\"justify-center xs:flex block sm:hidden\">\n        <div className=\"card image-full m-2 max-w-[500px] bg-base-100 shadow-xl dark:border-white border-2\">\n          <figure className=\"h-[300px] \">\n            <img src={img} alt={title} />\n          </figure>\n          <div className=\"card-body\">\n            <h2 className=\"card-title p-1 font-extrabold italic hover:underline hover:opacity-60\">\n              <a href={url} rel=\"noreferrer\" target=\"_blank\">\n                {title} <span className=\"text-xs\">(link)</span>\n              </a>\n            </h2>\n            <h3 className=\"card-title p-1 font-extrabold\">By {author}</h3>\n            <section>\n              <div className=\"m-2 rounded-lg border-2 p-3\">\n                <p className=\"text-lg font-normal\">{excerpt}...</p>\n              </div>\n              {tags?.map((t) => {\n                return (\n                  <button\n                    className=\"btn-success btn-sm btn btn-primary m-1\"\n                    key={t}\n                    onClick={() => {\n                      navigate(`/stories/${t}`);\n                    }}\n                  >\n                    {t}\n                  </button>\n                );\n              })}\n              {admin && (\n                <button\n                  className=\"btn-sm btn-circle btn m-2 bg-lime-900 text-2xl\"\n                  onClick={() => navigate(`/tags/${id}/new`)}\n                >\n                  +\n                </button>\n              )}\n              {admin && (\n                <Form method=\"delete\">\n                  <button\n                    className=\"btn-sm btn-circle btn bg-red-600\"\n                    type=\"submit\"\n                    name=\"_action\"\n                    value={`delete-${id}`}\n                  >\n                    X\n                  </button>\n                </Form>\n              )}\n            </section>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n", "import { json } from \"@remix-run/node\";\nimport type { LoaderArgs } from \"@remix-run/node\";\n\nimport { useLoaderData } from \"@remix-run/react\";\nimport { StoryCard } from \"~/components/StoryCard\";\n\nimport { getAllStories } from \"~/models/magazine.server\";\nimport { getUserId } from \"~/session.server\";\n\nexport async function loader({ request }: LoaderArgs) {\n  const user = await getUserId(request);\n  const s = await getAllStories();\n  let int = 0;\n  if (s.length) {\n    int = Math.floor(Math.random() * s.length);\n  }\n  return json({ story: s[int], user });\n}\n\nexport default function TagPage() {\n  const data = useLoaderData<typeof loader>();\n  return (\n    <div>\n      {data?.story ? (\n        <StoryCard\n          id={data.story?.id || \"\"}\n          mag={data?.story?.mag}\n          title={data?.story?.name || \"\"}\n          img={data?.story?.img}\n          url={data?.story?.url}\n          key={data?.story?.name}\n          author={data?.story?.author}\n          excerpt={data?.story?.excerpt}\n          words={data?.story?.words}\n          date={data?.story?.pubDate}\n          issue={data?.story?.volume}\n          tags={data?.story?.tags}\n        />\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { useCatch, useLoaderData, useRouteLoaderData } from \"@remix-run/react\";\nimport { StoryCard } from \"~/components/StoryCard\";\nimport { getOneStory, getStoriesByTag } from \"~/models/magazine.server\";\nimport { getUserId } from \"~/session.server\";\nimport type { RootData } from \"~/types\";\n\nexport async function loader({ request, params }: LoaderArgs) {\n  const tag = params.tag;\n  const storyItems = await getStoriesByTag(tag);\n  const stories = await Promise.all(storyItems.map((i) => {\n\n    return getOneStory(i.sk.replace('story#', ''))\n  }))\n\n  const user = await getUserId(request);\n  return json({ stories, user });\n}\n\nexport default function TagStoriesPage() {\n  const data = useLoaderData<typeof loader>();\n  const root = useRouteLoaderData(\"root\") as RootData;\n  return (\n    <div>\n      {data.stories.map((story) => {\n        return (\n          <StoryCard\n            id={story.id}\n            mag={story.mag}\n            title={story.name}\n            img={story.img}\n            url={story.url}\n            key={story.name}\n            author={story.author}\n            excerpt={story.excerpt}\n            words={story.words}\n            date={story.pubDate}\n            issue={story.volume}\n            tags={story.tags}\n            admin={root?.admin}\n            />\n        );\n      })}\n    </div>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return <div>An unexpected error occurred: {error.message}</div>;\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return <div>Tag not found</div>;\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import { json } from \"@remix-run/node\";\nimport {\n  useLoaderData,\n  useNavigate,\n} from \"@remix-run/react\";\nimport type { ChangeEvent} from \"react\";\nimport { useEffect, useRef, useState } from \"react\";\n\nimport { getAllTags } from \"~/models/magazine.server\";\n\nexport async function loader() {\n  const tags = await getAllTags();\n  tags.sort((a, b) => (a.tag > b.tag ? 1 : -1));\n  return json({ tags });\n}\nexport default function TagsPage() {\n\n  const searchRef = useRef<HTMLInputElement>(null);\n  const { tags } = useLoaderData<typeof loader>();\n  const [search, setSearch] = useState('');\n  const [filtered, setFiltered] = useState(tags);\n\n  const handleSearchChange = (e: ChangeEvent<HTMLInputElement>) => {\n    \n    setSearch(e.target.value)\n    e.preventDefault()\n  }\n\n  useEffect(() => {\n    setFiltered(tags.filter((t) => t.tag.toLowerCase().includes(search.toLowerCase())))\n  }, [search, tags])\n\n  const navigate = useNavigate();\n  return (\n    <div className=\"mt-2\">\n      <section className=\"flex justify-center\">\n        <span className=\"ml-5 font-semibold\">\n          <span className=\"ml-5 font-serif text-3xl\">T</span>\n          <span className=\"text-xl text-stone-500\">ags</span>\n        </span>\n      </section>\n      <section className=\"flex justify-center\">\n          <input\n            ref={searchRef}\n            onChange={handleSearchChange}\n            id=\"search\"\n            name=\"search\"\n            type=\"text\"\n            placeholder=\"Search tags\"\n            className=\"input-bordered input-primary input w-full max-w-xs mt-5\"\n          />\n      </section>\n      <section className=\"m-3 flex justify-center\">\n        <div className=\"card w-4/5\">\n          <div className=\"card-body flex flex-row flex-wrap justify-center\">\n            {filtered.map(({ tag }: { tag: string }) => {\n              return (\n                <button\n                  className=\"btn-outline btn-primary btn-link btn-sm btn m-1\"\n                  key={tag}\n                  onClick={() => {\n                    navigate(`/stories/${tag}`);\n                  }}\n                >\n                  {tag}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n", "import { useLoaderData, useRouteLoaderData } from \"@remix-run/react\";\nimport type { ActionArgs, LoaderArgs } from \"@remix-run/server-runtime\";\nimport { redirect, json } from \"@remix-run/server-runtime\";\nimport { MagCard } from \"~/components/MagCard\";\nimport { deleteMag, getAllMags } from \"~/models/magazine.server\";\nimport { requireUserId } from \"~/session.server\";\nimport type { MagProps, RootData } from \"~/types\";\n\nexport async function loader({ request }: LoaderArgs) {\n  const magItems = await getAllMags();\n  return json({ magItems });\n}\n\nexport async function action({ request }: ActionArgs) {\n  await requireUserId(request);\n  const clonedData = request.clone();\n  const formDatas = await clonedData.formData();\n  const { _action } = Object.fromEntries(formDatas);\n  if (_action.toString().includes(\"delete\")) {\n    const del = _action.toString().split(',')\n    await deleteMag({id: del[1], mag: del[2]});\n    return redirect(\"/mag\");\n  }\n  return null;\n}\n\nexport default function MagPage() {\n  const data = useLoaderData();\n  const root = useRouteLoaderData(\"root\") as RootData;\n  return (\n    <div className=\"mt-2\">\n      <section className=\"flex justify-center\">\n        <span className=\"ml-5 font-semibold\">\n          <span className=\"ml-5 text-3xl font-serif\">M</span>\n          <span className=\"text-xl text-stone-500\">agazines</span>\n        </span>\n      </section>\n      <section className=\"flex w-full flex-wrap items-center justify-center p-3\">\n        {data.magItems.map((m: MagProps) => {\n          return (\n            <MagCard\n              id={m.id}\n              key={m.id}\n              display={m.display}\n              img={m.img}\n              desc={m.desc}\n              url={m.url}\n              name={m.name}\n              admin={root.admin}\n            />\n          );\n        })}\n      </section>\n    </div>\n  );\n}\n", "import { Form, useNavigate } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport type { MagProps } from \"~/types\";\n\nexport function MagCard({\n  id,\n  display,\n  img,\n  desc,\n  url,\n  name,\n  admin,\n}: MagProps) {\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"card image-full m-2 w-80 bg-base-100 shadow-xl dark:border-white border-2\">\n      <figure className=\"h-44 opacity-50\">\n        <img src={img} alt={name} />\n      </figure>\n      <div className=\"card-body\">\n        <div className=\"tooltip tooltip-secondary tooltip-top\" data-tip={desc}>\n          <h2 className=\"card-title\">{display}</h2>\n        </div>\n        <div className=\"card-actions justify-end mt-12\">\n          {admin && (\n            <>\n              <Form method=\"delete\">\n                <button\n                  className=\"btn-sm btn-circle btn bg-red-600\"\n                  type=\"submit\"\n                  name=\"_action\"\n                  value={`delete,${id},${name}`}\n                >\n                  X\n                </button>\n              </Form>\n              <button\n                className=\"btn-sm btn\"\n                onClick={() => navigate(`/mag/${name}/edit`)}\n              >\n                edit\n              </button>\n            </>\n          )}\n          <button\n            className=\"btn-primary btn-sm btn shadow-md shadow-black hover:shadow-sm active:shadow-none\"\n            onClick={() => {\n              window.open(`${url}`, \"_blank\");\n            }}\n          >\n            WEBSITE\n          </button>\n          <button\n            className=\"btn-primary btn-sm btn shadow-md shadow-black hover:shadow-sm active:shadow-none\"\n            onClick={() => {\n              window.open(`/mag/${name}`, \"_self\");\n            }}\n          >\n            Stories\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport {\n  json,\n  redirect,\n  unstable_composeUploadHandlers as composeUploadHandlers,\n  unstable_createMemoryUploadHandler as createMemoryUploadHandler,\n  unstable_parseMultipartFormData as parseMultipartFormData,\n} from \"@remix-run/node\";\nimport { Form, useActionData, useLoaderData } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport type { Story } from \"~/models/magazine.server\";\nimport { getAllMags , createStoryST } from \"~/models/magazine.server\";\nimport { requireUser } from \"~/session.server\";\nimport { uploadImage } from \"~/models/utils.server\";\n\nexport async function loader({ request }: LoaderArgs) {\n  const email = (await requireUser(request)).email;\n  if (process.env.ADMIN !== email) {\n    const searchParams = new URLSearchParams([\n      [\"redirectTo\", new URL(request.url).pathname],\n    ]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  const magazineItems = await getAllMags();\n  return json({ magazineItems });\n}\n\nexport async function action({ request }: ActionArgs) {\n  await requireUser(request);\n  const clonedData = request.clone();\n  const formDatas = await clonedData.formData();\n  const { _action } = Object.fromEntries(formDatas);\n  let secure_url: string = \"\";\n  if (_action === \"create\") {\n    const pubDate =formDatas.get(\"pubDate\");\n    const volume = formDatas.get(\"volume\");\n    const mag = formDatas.get(\"mag\");\n    const name = formDatas.get(\"name\");\n    const author = formDatas.get(\"author\");\n    const excerpt = formDatas.get(\"excerpt\");\n    const img = formDatas.get(\"img\");\n    const url = formDatas.get(\"url\");\n    const words = parseInt(formDatas.get(\"words\") as string);\n\n    if (typeof name !== \"string\" || name.length === 0) {\n      return json(\n        {\n          errors: {\n            name: \"name needed\",\n            url: null,\n            img: null,\n            pubDate: null,\n            volume: null,\n            mag: null,\n            author: null,\n            words: null,\n            excerpt: null,\n            imgCloud: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    if (!pubDate) {\n      return json(\n        {\n          errors: {\n            name: null,\n            url: null,\n            img: null,\n            pubDate: \"Date needed\",\n            volume: null,\n            mag: null,\n            author: null,\n            words: null,\n            excerpt: null,\n            imgCloud: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof url !== \"string\" || url.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            url: \"url needed\",\n            img: null,\n            pubDate: null,\n            volume: null,\n            mag: null,\n            author: null,\n            words: null,\n            excerpt: null,\n            imgCloud: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof img !== \"string\" || img.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            img: \"img is required\",\n            url: null,\n            pubDate: null,\n            mag: null,\n            author: null,\n            words: null,\n            excerpt: null,\n            volume: null,\n            imgCloud: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof mag !== \"string\" || mag.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            url: null,\n            img: null,\n            pubDate: null,\n            volume: null,\n            mag: \"Magazine needed\",\n            author: null,\n            words: null,\n            excerpt: null,\n            imgCloud: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof author !== \"string\" || author.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            url: null,\n            img: null,\n            pubDate: null,\n            volume: null,\n            mag: null,\n            author: \"Author needed\",\n            words: null,\n            excerpt: null,\n            imgCloud: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof excerpt !== \"string\" || excerpt.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            url: null,\n            img: null,\n            pubDate: null,\n            volume: null,\n            mag: null,\n            author: null,\n            words: null,\n            excerpt: \"Excerpt needed\",\n            imgCloud: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof words !== \"number\" || !words) {\n      return json(\n        {\n          errors: {\n            name: null,\n            words: \"words needed\",\n            pubDate: null,\n            url: null,\n            img: null,\n            volume: null,\n            mag: null,\n            author: null,\n            excerpt: null,\n            imgCloud: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    await createStoryST({\n      name,\n      url,\n      img,\n      author,\n      pubDate,\n      volume,\n      mag,\n      excerpt,\n      words,\n    } as Story);\n   \n    return redirect(`/`);\n  }\n  if (_action === \"upload\") {\n    const handlers = async ({\n      name,\n      data,\n    }: {\n      name: string;\n      data: AsyncIterable<Uint8Array>;\n    }) => {\n      if (name !== \"imgCloud\") {\n        return undefined;\n      }\n      const uploadedImage = await uploadImage(data);\n      secure_url = uploadedImage.secure_url;\n      return secure_url;\n    };\n    const uploadHandler = composeUploadHandlers(\n      handlers,\n      createMemoryUploadHandler()\n    );\n    const imgFormData = await parseMultipartFormData(request, uploadHandler);\n    const imgCloud = imgFormData.get(\"imgCloud\");\n    if (typeof imgCloud !== \"string\" || imgCloud.length === 0) {\n      return json(\n        {\n          errors: {\n            imgCloud: \"imgCloud needed\",\n            name: null,\n            words: null,\n            pubDate: null,\n            url: null,\n            img: null,\n            volume: null,\n            mag: null,\n            author: null,\n            excerpt: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n    return json({\n      uploadedImage: secure_url,\n      errors: {\n        imgCloud: null,\n        name: null,\n        words: null,\n        pubDate: null,\n        url: null,\n        img: null,\n        volume: null,\n        mag: null,\n        author: null,\n        excerpt: null,\n      },\n    });\n  }\n  return redirect(\"/\");\n}\n\nexport default function NewStoryPage() {\n  const data = useLoaderData<typeof loader>();\n  const actionData = useActionData<typeof action>();\n\n  const nameRef = React.useRef<HTMLInputElement>(null);\n  const pubDateRef = React.useRef<HTMLInputElement>(null);\n  const urlRef = React.useRef<HTMLInputElement>(null);\n  const authorRef = React.useRef<HTMLInputElement>(null);\n  const imgRef = React.useRef<HTMLInputElement>(null);\n  const volumeRef = React.useRef<HTMLInputElement>(null);\n  const wordsRef = React.useRef<HTMLInputElement>(null);\n  const excerptRef = React.useRef<HTMLInputElement & HTMLTextAreaElement>(null);\n  const magRef = React.useRef<HTMLInputElement & HTMLSelectElement>(null);\n  const imgSourceRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.name) {\n      nameRef.current?.focus();\n    } else if (actionData?.errors?.img) {\n      imgRef.current?.focus();\n    } else if (actionData?.errors?.pubDate) {\n      pubDateRef.current?.focus();\n    } else if (actionData?.errors?.url) {\n      urlRef.current?.focus();\n    } else if (actionData?.errors?.excerpt) {\n      excerptRef.current?.focus();\n    } else if (actionData?.errors?.volume) {\n      volumeRef.current?.focus();\n    } else if (actionData?.errors?.mag) {\n      magRef.current?.focus();\n    } else if (actionData?.errors?.words) {\n      wordsRef.current?.focus();\n    } else if (actionData?.errors?.author) {\n      authorRef.current?.focus();\n    } else if (actionData?.errors?.imgCloud) {\n      imgSourceRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div>\n      <h3 className=\"text-lg\">New Story</h3>\n      <Form\n        method=\"post\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 8,\n          width: \"100%\",\n        }}\n      >\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Story Name\"\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            name=\"name\"\n            ref={nameRef}\n            aria-invalid={actionData?.errors?.name ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.name ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.name && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.name}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Date Published\"\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            name=\"pubDate\"\n            ref={pubDateRef}\n            aria-invalid={actionData?.errors?.pubDate ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.pubDate ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.pubDate && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.pubDate}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Author\"\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            name=\"author\"\n            ref={authorRef}\n            aria-invalid={actionData?.errors?.author ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.author ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.author && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.author}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Volume\"\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            name=\"volume\"\n            ref={volumeRef}\n            aria-invalid={actionData?.errors?.volume ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.volume ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.volume && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.volume}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Word Count\"\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            name=\"words\"\n            ref={wordsRef}\n            aria-invalid={actionData?.errors?.words ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.words ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.words && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.words}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <textarea\n            className=\"textarea-bordered textarea m-2\"\n            placeholder=\"Excerpt\"\n            ref={excerptRef}\n            cols={34}\n            name=\"excerpt\"\n            aria-invalid={actionData?.errors?.excerpt ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.excerpt ? \"body-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.excerpt && (\n            <div className=\"pt-1 text-red-700\" id=\"body-error\">\n              {actionData.errors.excerpt}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"URL\"\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            name=\"url\"\n            ref={urlRef}\n            aria-invalid={actionData?.errors?.url ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.url ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.url && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.url}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Img URL\"\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            value={actionData?.uploadedImage}\n            name=\"img\"\n            ref={imgRef}\n            aria-invalid={actionData?.errors?.img ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.img ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.img && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.img}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <select\n            name=\"mag\"\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            placeholder=\"magazine\"\n            ref={magRef}\n            aria-invalid={actionData?.errors?.mag ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.mag ? \"title-error\" : undefined\n            }\n          >\n            {data.magazineItems.map((m) => {\n              return ( \n                <option key={m.id} value={m.name}>\n                  {m.display}\n                </option>\n              )\n            })}\n          </select>\n\n          {actionData?.errors?.mag && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.mag}\n            </div>\n          )}\n        </div>\n\n        <div className=\"text-left\">\n          <button className=\"btn\" type=\"submit\" name=\"_action\" value=\"create\">\n            Save\n          </button>\n        </div>\n      </Form>\n      <h6>Upload an image</h6>\n      <Form method=\"post\" encType=\"multipart/form-data\" id=\"upload-form\">\n        <div>\n          <input\n            ref={imgSourceRef}\n            id=\"imgCloud\"\n            type=\"file\"\n            name=\"imgCloud\"\n            accept=\"image/*\"\n            className=\"file-input file-input-bordered w-full max-w-xs\"\n          />\n        </div>\n        <div>\n          <button className=\"btn\" type=\"submit\" name=\"_action\" value=\"upload\">\n            {\" \"}\n            Upload to Cloudinary{\" \"}\n          </button>\n        </div>\n      </Form>\n    </div>\n  );\n}\n", "// utils/util.server.js\n\nimport type { UploadApiResponse } from \"cloudinary\";\nimport cloudinary from \"cloudinary\";\nimport { writeAsyncIterableToWritable } from \"@remix-run/node\";\n\ncloudinary.v2.config({\n  cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\n  api_key: process.env.CLOUDINARY_API_KEY,\n  api_secret: process.env.CLOUDINARY_API_SECRET,\n});\n\nasync function uploadImage(data: AsyncIterable<Uint8Array>) {\n  const uploadPromise = new Promise<UploadApiResponse>(\n    async (resolve, reject) => {\n      const uploadStream = cloudinary.v2.uploader.upload_stream(\n        {\n          folder: \"remix\",\n        },\n        (error, result) => {\n          if (error || !result) {\n            reject(error);\n            return;\n          }\n          resolve(result);\n        }\n      );\n      await writeAsyncIterableToWritable(data, uploadStream);\n    }\n  );\n\n  return uploadPromise;\n}\n\nexport { uploadImage };\n", "import type { ActionArgs } from \"@remix-run/node\";\nimport {\n  json,\n  redirect,\n  unstable_composeUploadHandlers as composeUploadHandlers,\n  unstable_createMemoryUploadHandler as createMemoryUploadHandler,\n  unstable_parseMultipartFormData as parseMultipartFormData,\n} from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport type { Magazine} from \"~/models/magazine.server\";\nimport { createMagazineST } from \"~/models/magazine.server\";\nimport { requireUser } from \"~/session.server\";\nimport { useUser } from \"~/utils\";\nimport { uploadImage } from \"~/models/utils.server\";\n\nexport async function action({ request }: ActionArgs) {\n  await requireUser(request);\n  const clonedData = request.clone();\n  const formDatas = await clonedData.formData();\n  const { _action, ...values } = Object.fromEntries(formDatas);\n  let secure_url: string = \"\";\n  if (_action === \"create\") {\n    if (typeof values.name !== \"string\" || values.name.length === 0) {\n      return json(\n        {\n          errors: {\n            name: \"Name is required\",\n            desc: null,\n            display: null,\n            url: null,\n            img: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof values.display !== \"string\" || values.display.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            desc: null,\n            display: \"display is required\",\n            url: null,\n            img: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof values.desc !== \"string\" || values.desc.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            desc: \"desc is required\",\n            display: null,\n            url: null,\n            img: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof values.url !== \"string\" || values.url.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            url: \"url is required\",\n            display: null,\n            desc: null,\n            img: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    if (typeof values.img !== \"string\" || values.img.length === 0) {\n      return json(\n        {\n          errors: {\n            name: null,\n            img: \"img is required\",\n            display: null,\n            url: null,\n            desc: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n\n    await createMagazineST({\n      id: values.name,\n      name: values.name,\n      display: values.display,\n      url: values.url,\n      desc: values.desc,\n      img: values.img,\n    } as Magazine);\n\n    return redirect(`/`);\n  }\n\n  if (_action === \"upload\") {\n    const handlers = async ({\n      name,\n      data,\n    }: {\n      name: string;\n      data: AsyncIterable<Uint8Array>;\n    }) => {\n      if (name !== \"imgCloud\") {\n        return undefined;\n      }\n      const uploadedImage = await uploadImage(data);\n      secure_url = uploadedImage.secure_url;\n      return secure_url;\n    };\n    const uploadHandler = composeUploadHandlers(\n      handlers,\n      createMemoryUploadHandler()\n    );\n    const imgFormData = await parseMultipartFormData(request, uploadHandler);\n    const imgCloud = imgFormData.get(\"imgCloud\");\n    if (typeof imgCloud !== \"string\" || imgCloud.length === 0) {\n      return json(\n        {\n          errors: {\n            imgCloud: \"imgCloud needed\",\n            name: null,\n            url: null,\n            display: null,\n            desc: null,\n            img: null,\n          },\n          uploadedImage: secure_url,\n        },\n        { status: 400 }\n      );\n    }\n    return json({\n      uploadedImage: secure_url,\n      errors: {\n        imgCloud: null,\n        name: null,\n        url: null,\n        display: null,\n        desc: null,\n        img: null,\n      },\n    });\n  }\n  return redirect(\"/\");\n}\n\nexport default function NewMagazinePage() {\n  const user = useUser();\n  const actionData = useActionData<typeof action>();\n  const nameRef = React.useRef<HTMLInputElement>(null);\n  const descRef = React.useRef<HTMLInputElement & HTMLTextAreaElement>(null);\n  const urlRef = React.useRef<HTMLInputElement>(null);\n  const displayRef = React.useRef<HTMLInputElement>(null);\n  const imgRef = React.useRef<HTMLInputElement>(null);\n  const imgSourceRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.name) {\n      nameRef.current?.focus();\n    } else if (actionData?.errors?.desc) {\n      descRef.current?.focus();\n    } else if (actionData?.errors?.display) {\n      displayRef.current?.focus();\n    } else if (actionData?.errors?.url) {\n      urlRef.current?.focus();\n    } else if (actionData?.errors?.img) {\n      imgRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div>\n      <p>{user.email}</p>\n      <Form action=\"/logout\" method=\"post\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-slate-600 py-2 px-4 text-blue-100 hover:bg-blue-500 active:bg-blue-600\"\n        >\n          Logout\n        </button>\n      </Form>\n      <Form method=\"post\">\n        <section className=\"flex flex-col\">\n          <input\n            type=\"text\"\n            placeholder=\"Display Name\"\n            className=\"input-bordered input m-2 w-full max-w-xs\"\n            name=\"display\"\n            ref={displayRef}\n            aria-invalid={actionData?.errors?.display ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.display ? \"title-error\" : undefined\n            }\n          />\n\n          {actionData?.errors?.display && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.display}\n            </div>\n          )}\n\n          <div>\n            <input\n              name=\"name\"\n              className=\"input-bordered input m-2 w-full max-w-xs\"\n              placeholder=\"Slug\"\n              ref={nameRef}\n              aria-invalid={actionData?.errors?.name ? true : undefined}\n              aria-errormessage={\n                actionData?.errors?.name ? \"title-error\" : undefined\n              }\n            />\n\n            {actionData?.errors?.name && (\n              <div className=\"pt-1 text-red-700\" id=\"title-error\">\n                {actionData.errors.name}\n              </div>\n            )}\n          </div>\n\n          <div>\n            <textarea\n              className=\"textarea-bordered textarea m-2\"\n              placeholder={\"Description\"}\n              ref={descRef}\n              cols={34}\n              name=\"desc\"\n              aria-invalid={actionData?.errors?.desc ? true : undefined}\n              aria-errormessage={\n                actionData?.errors?.desc ? \"body-error\" : undefined\n              }\n            />\n\n            {actionData?.errors?.desc && (\n              <div className=\"pt-1 text-red-700\" id=\"body-error\">\n                {actionData.errors.desc}\n              </div>\n            )}\n          </div>\n\n          <div>\n            <input\n              className=\"input-bordered input m-2 w-full max-w-xs\"\n              placeholder={\"URL\"}\n              name=\"url\"\n              ref={urlRef}\n              aria-invalid={actionData?.errors?.url ? true : undefined}\n              aria-errormessage={\n                actionData?.errors?.url ? \"title-error\" : undefined\n              }\n            />\n\n            {actionData?.errors?.url && (\n              <div className=\"pt-1 text-red-700\" id=\"title-error\">\n                {actionData.errors.url}\n              </div>\n            )}\n          </div>\n\n          <div>\n            <input\n              className=\"input-bordered input m-2 w-full max-w-xs\"\n              value={actionData?.uploadedImage}\n              placeholder={\"Img URL\"}\n              name=\"img\"\n              ref={imgRef}\n              aria-invalid={actionData?.errors?.img ? true : undefined}\n              aria-errormessage={\n                actionData?.errors?.img ? \"title-error\" : undefined\n              }\n            />\n\n            {actionData?.errors?.img && (\n              <div className=\"pt-1 text-red-700\" id=\"title-error\">\n                {actionData.errors.img}\n              </div>\n            )}\n          </div>\n\n          <div className=\"text-left\">\n            <button className=\"btn\" type=\"submit\" name=\"_action\" value=\"create\">\n              Save\n            </button>\n          </div>\n        </section>\n      </Form>\n      <div className=\"m-3 border-spacing-3 border\">\n        <h3 className=\"text-lg\">Upload an image</h3>\n        <Form method=\"post\" encType=\"multipart/form-data\" id=\"upload-form\">\n          <input ref={imgSourceRef}\n            id=\"imgCloud\"\n            type=\"file\"\n            name=\"imgCloud\"\n            accept=\"image/*\"\n            className=\"file-input file-input-bordered w-full max-w-xs\" />\n          <div>\n            <button className=\"btn\" type=\"submit\" name=\"_action\" value=\"upload\">\n              {\" \"}\n              Upload to Cloudinary{\" \"}\n            </button>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\n\nimport type { User } from \"~/models/user.server\";\n\nconst DEFAULT_REDIRECT = \"/\";\n\n/**\n * This should be used any time the redirect path is user-provided\n * (Like the query string on our login/signup pages). This avoids\n * open-redirect vulnerabilities.\n * @param {string} to The redirect destination\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\n */\nexport function safeRedirect(\n  to: FormDataEntryValue | string | null | undefined,\n  defaultRedirect: string = DEFAULT_REDIRECT\n) {\n  if (!to || typeof to !== \"string\") {\n    return defaultRedirect;\n  }\n\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\n    return defaultRedirect;\n  }\n\n  return to;\n}\n\n/**\n * This base hook is used in other hooks to quickly search for specific data\n * across all loader data using useMatches.\n * @param {string} id The route id\n * @returns {JSON|undefined} The router data or undefined if not found\n */\nexport function useMatchesData(\n  id: string\n): Record<string, unknown> | undefined {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\nfunction isUser(user: any): user is User {\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\n}\n\nexport function useOptionalUser(): User | undefined {\n  const data = useMatchesData(\"root\");\n  if (!data || !isUser(data.user)) {\n    return undefined;\n  }\n  return data.user;\n}\n\nexport function useUser(): User {\n  const maybeUser = useOptionalUser();\n  if (!maybeUser) {\n    throw new Error(\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\n    );\n  }\n  return maybeUser;\n}\n\nexport function validateEmail(email: unknown): email is string {\n  return typeof email === \"string\" && email.length > 3 && email.includes(\"@\");\n}\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { logout } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  return logout(request);\n};\n\nexport const loader: LoaderFunction = async () => {\n  return redirect(\"/\");\n};\n", "export default function AboutPage() {\n  return (\n    <div className=\"mt-2\">\n      <section className=\"flex justify-center\">\n        <span className=\"ml-5 font-semibold\">\n          <span className=\"ml-5 text-3xl font-serif\">\u2139\uFE0F A</span>\n          <span className=\"text-xl text-stone-500\">bout</span>\n        </span>\n      </section>\n      <section className=\"flex justify-center\">\n        <div className=\"card w-4/5 p-4\">\n          <h2 className=\"m-2 text-xl\">Dictionary.com defines</h2>\n          <h2 className=\"m-2 text-5xl\">speculative fiction</h2>\n          <p className=\"m-1 text-xl\">noun</p>\n\n          <div className=\"rounded-lg border-4 p-4\">\n            {\" \"}\n            a broad literary genre encompassing any fiction with supernatural,\n            fantastical, or futuristic elements\n          </div>\n\n          <p className=\"m-1 text-xl\">\n            In keeping with that broad term, 'Free Specultive Fiction' promotes\n            this content while also meeting certain other criteria\n          </p>\n          <p className=\"m-1 text-xl\">1. Free to read \uD83C\uDD93</p>\n          <p className=\"m-1 text-xl\">2. Pays authors profession rates \uD83D\uDCB0</p>\n          <p className=\"m-1 text-xl\">3. Printed Media \uD83D\uDCC3</p>\n          <p className=\"m-1 text-xl\">\n            &bull; Story images generated by AI model,{\" \"}\n            <a\n              className=\"link\"\n              href=\"https://www.craiyon.com/\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              craiyon\n            </a>\n            , based on text prompts from the story themes\n          </p>\n        </div>\n      </section>\n    </div>\n  );\n}\n", "import type { LoaderArgs} from \"@remix-run/server-runtime\";\nimport { json } from \"@remix-run/server-runtime\";\nimport { useOutletContext } from \"@remix-run/react\";\n\nexport async function loader({ request }: LoaderArgs) {\n  return json({});\n}\n\nexport default function HomePage() {\n  const [showMenu] = useOutletContext<Boolean[]>();\n  return (\n    <div className=\"\">\n      <main>\n        {showMenu ? (\n          <section\n            id=\"mobile-menu\"\n            className=\"top-68 justify-content-center animate-open-menu absolute w-full origin-top flex-col text-5xl\"\n          >\n            <nav\n              className=\"flex min-h-screen flex-col items-center py-8\"\n              aria-label=\"mobile\"\n            >\n              <a href=\"/\" className=\"w-full py-6 text-center hover:opacity-90\">\n                Home\n              </a>\n              <a\n                href=\"/tags\"\n                className=\"w-full py-6 text-center hover:opacity-90\"\n              >\n                Tags\n              </a>\n              <a\n                href=\"/about\"\n                className=\"w-full py-6 text-center hover:opacity-90\"\n              >\n                About\n              </a>\n            </nav>\n          </section>\n        ) : (\n          <div>\n            <div\n              className=\"hero min-h-screen\"\n              style={{\n                backgroundImage: `url(\"https://res.cloudinary.com/djmxtsbdq/image/upload/v1674047110/remix/pl_fefgbi.png\")`,\n              }}\n            >\n              <div className=\"hero-overlay bg-opacity-50\"></div>\n              <div className=\"hero-content text-center text-neutral-content\">\n                <div className=\"max-w-3xl\">\n                  <figure className=\"p-2\">\n                    <blockquote className=\"relative rounded-3xl bg-transparent py-12 pl-14 pr-8\">\n                      <h4 className=\"mb-3 text-left text-2xl font-bold text-white\">\n                        speculative fiction\n                      </h4>\n                      <p\n                        className=\"text-1xl mt-2 text-left text-white before:absolute before:top-0 before:left-0 before:translate-x-2\n                  before:translate-y-2 before:transform before:font-serif before:text-9xl before:opacity-25 \n                  before:content-['\\201C'] after:absolute after:-bottom-20 after:right-0\n                  after:-translate-x-2 after:-translate-y-2 after:transform after:font-serif after:text-9xl after:opacity-25 \n                  after:content-['\\201D'] sm:text-3xl\"\n                      >\n                        a broad literary genre encompassing any fiction with\n                        supernatural, fantastical, or futuristic elements\n                      </p>\n                    </blockquote>\n                    <figcaption className=\"mt-2 pr-2 text-right text-xl italic text-white sm:text-2xl\">\n                      &#8212;Dictionary.com\n                    </figcaption>\n                  </figure>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { createUserSession, getUserId } from \"~/session.server\";\nimport { verifyLogin } from \"~/models/user.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\ninterface ActionData {\n  errors?: {\n    email?: string;\n    password?: string;\n  };\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"));\n  const remember = formData.get(\"remember\");\n\n  if (!validateEmail(email)) {\n    return json<ActionData>(\n      { errors: { email: \"Email is invalid\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json<ActionData>(\n      { errors: { password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json<ActionData>(\n      { errors: { password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await verifyLogin(email, password);\n\n  if (!user) {\n    return json<ActionData>(\n      { errors: { email: \"Invalid email or password\" } },\n      { status: 400 }\n    );\n  }\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: remember === \"on\" ? true : false,\n    redirectTo,\n  });\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Login\",\n  };\n};\n\nexport default function LoginPage() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/notes\";\n  const actionData = useActionData() as ActionData;\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center\">\n      <div className=\"mx-auto w-full max-w-md px-8\">\n        <Form method=\"post\" className=\"space-y-6\" noValidate>\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Email address\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.email && (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.password && (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Log in\n          </button>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <input\n                id=\"remember\"\n                name=\"remember\"\n                type=\"checkbox\"\n                className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              />\n              <label\n                htmlFor=\"remember\"\n                className=\"ml-2 block text-sm text-gray-900\"\n              >\n                Remember me\n              </label>\n            </div>\n            <div className=\"text-center text-sm text-gray-500\">\n              Don't have an account?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/join\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Sign up\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\n\nimport { requireUserId } from \"~/session.server\";\nimport { useUser } from \"~/utils\";\nimport { getNoteListItems } from \"~/models/note.server\";\n\ntype LoaderData = {\n  noteListItems: Awaited<ReturnType<typeof getNoteListItems>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await requireUserId(request);\n  const noteListItems = await getNoteListItems({ userId });\n  return json<LoaderData>({ noteListItems });\n};\n\nexport default function NotesPage() {\n  const data = useLoaderData() as LoaderData;\n  const user = useUser();\n\n  return (\n    <div className=\"flex h-full min-h-screen flex-col\">\n      <header className=\"flex items-center justify-between bg-slate-800 p-4 text-white\">\n        <h1 className=\"text-3xl font-bold\">\n          <Link to=\".\">Notes</Link>\n        </h1>\n        <p>{user.email}</p>\n        <Form action=\"/logout\" method=\"post\">\n          <button\n            type=\"submit\"\n            className=\"rounded bg-slate-600 py-2 px-4 text-blue-100 hover:bg-blue-500 active:bg-blue-600\"\n          >\n            Logout\n          </button>\n        </Form>\n      </header>\n\n      <main className=\"flex h-full bg-white\">\n        <div className=\"h-full w-80 border-r bg-gray-50\">\n          <Link to=\"new\" className=\"block p-4 text-xl text-blue-500\">\n            + New Note\n          </Link>\n\n          <hr />\n\n          {data.noteListItems.length === 0 ? (\n            <p className=\"p-4\">No notes yet</p>\n          ) : (\n            <ol>\n              {data.noteListItems.map((note) => (\n                <li key={note.id}>\n                  <NavLink\n                    className={({ isActive }) =>\n                      `block border-b p-4 text-xl ${isActive ? \"bg-white\" : \"\"}`\n                    }\n                    to={note.id}\n                  >\n                    \uD83D\uDCDD {note.title}\n                  </NavLink>\n                </li>\n              ))}\n            </ol>\n          )}\n        </div>\n\n        <div className=\"flex-1 p-6\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n}\n", "import arc from \"@architect/functions\";\nimport cuid from \"cuid\";\n\nimport type { User } from \"./user.server\";\n\nexport type Note = {\n  id: ReturnType<typeof cuid>;\n  userId: User[\"id\"];\n  title: string;\n  body: string;\n};\n\ntype NoteItem = {\n  pk: User[\"id\"];\n  sk: `note#${Note[\"id\"]}`;\n};\n\nconst skToId = (sk: NoteItem[\"sk\"]): Note[\"id\"] => sk.replace(/^note#/, \"\");\nconst idToSk = (id: Note[\"id\"]): NoteItem[\"sk\"] => `note#${id}`;\n\nexport async function getNote({\n  id,\n  userId,\n}: Pick<Note, \"id\" | \"userId\">): Promise<Note | null> {\n  const db = await arc.tables();\n\n  const result = await db.note.get({ pk: userId, sk: idToSk(id) });\n\n  if (result) {\n    return {\n      userId: result.pk,\n      id: result.sk,\n      title: result.title,\n      body: result.body,\n    };\n  }\n  return null;\n}\n\nexport async function getNoteListItems({\n  userId,\n}: Pick<Note, \"userId\">): Promise<Array<Pick<Note, \"id\" | \"title\">>> {\n  const db = await arc.tables();\n\n  const result = await db.note.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": userId },\n  });\n\n  return result.Items.map((n: any) => ({\n    title: n.title,\n    id: skToId(n.sk),\n  }));\n}\n\nexport async function createNote({\n  body,\n  title,\n  userId,\n}: Pick<Note, \"body\" | \"title\" | \"userId\">): Promise<Note> {\n  const db = await arc.tables();\n\n  const result = await db.note.put({\n    pk: userId,\n    sk: idToSk(cuid()),\n    title: title,\n    body: body,\n  });\n  return {\n    id: skToId(result.sk),\n    userId: result.pk,\n    title: result.title,\n    body: result.body,\n  };\n}\n\nexport async function deleteNote({ id, userId }: Pick<Note, \"id\" | \"userId\">) {\n  const db = await arc.tables();\n  return db.note.delete({ pk: userId, sk: idToSk(id) });\n}\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useCatch, useLoaderData } from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\n\nimport { deleteNote } from \"~/models/note.server\";\nimport { getNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\ntype LoaderData = {\n  note: NonNullable<Awaited<ReturnType<typeof getNote>>>;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  const note = await getNote({ userId, id: params.noteId });\n  if (!note) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n  return json<LoaderData>({ note });\n};\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  await deleteNote({ userId, id: params.noteId });\n\n  return redirect(\"/notes\");\n};\n\nexport default function NoteDetailsPage() {\n  const data = useLoaderData() as LoaderData;\n\n  return (\n    <div>\n      <h3 className=\"text-2xl font-bold\">{data.note.title}</h3>\n      <p className=\"py-6\">{data.note.body}</p>\n      <hr className=\"my-4\" />\n      <Form method=\"post\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Delete\n        </button>\n      </Form>\n    </div>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return <div>An unexpected error occurred: {error.message}</div>;\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return <div>Note not found</div>;\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import { Link } from \"@remix-run/react\";\n\nexport default function NoteIndexPage() {\n  return (\n    <p>\n      No note selected. Select a note on the left, or{\" \"}\n      <Link to=\"new\" className=\"text-blue-500 underline\">\n        create a new note.\n      </Link>\n    </p>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { createNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\ntype ActionData = {\n  errors?: {\n    title?: string;\n    body?: string;\n  };\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const userId = await requireUserId(request);\n\n  const formData = await request.formData();\n  const title = formData.get(\"title\");\n  const body = formData.get(\"body\");\n\n  if (typeof title !== \"string\" || title.length === 0) {\n    return json<ActionData>(\n      { errors: { title: \"Title is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof body !== \"string\" || body.length === 0) {\n    return json<ActionData>(\n      { errors: { body: \"Body is required\" } },\n      { status: 400 }\n    );\n  }\n\n  const note = await createNote({ title, body, userId });\n\n  return redirect(`/notes/${note.id}`);\n};\n\nexport default function NewNotePage() {\n  const actionData = useActionData() as ActionData;\n  const titleRef = React.useRef<HTMLInputElement>(null);\n  const bodyRef = React.useRef<HTMLTextAreaElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.title) {\n      titleRef.current?.focus();\n    } else if (actionData?.errors?.body) {\n      bodyRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <Form\n      method=\"post\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 8,\n        width: \"100%\",\n      }}\n    >\n      <div>\n        <label className=\"flex w-full flex-col gap-1\">\n          <span>Title: </span>\n          <input\n            ref={titleRef}\n            name=\"title\"\n            className=\"flex-1 rounded-md border-2 border-blue-500 px-3 text-lg leading-loose\"\n            aria-invalid={actionData?.errors?.title ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.title ? \"title-error\" : undefined\n            }\n          />\n        </label>\n        {actionData?.errors?.title && (\n          <div className=\"pt-1 text-red-700\" id=\"title-error\">\n            {actionData.errors.title}\n          </div>\n        )}\n      </div>\n\n      <div>\n        <label className=\"flex w-full flex-col gap-1\">\n          <span>Body: </span>\n          <textarea\n            ref={bodyRef}\n            name=\"body\"\n            rows={8}\n            className=\"w-full flex-1 rounded-md border-2 border-blue-500 py-2 px-3 text-lg leading-6\"\n            aria-invalid={actionData?.errors?.body ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.body ? \"body-error\" : undefined\n            }\n          />\n        </label>\n        {actionData?.errors?.body && (\n          <div className=\"pt-1 text-red-700\" id=\"body-error\">\n            {actionData.errors.body}\n          </div>\n        )}\n      </div>\n\n      <div className=\"text-right\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Save\n        </button>\n      </div>\n    </Form>\n  );\n}\n", "import { useLoaderData } from \"@remix-run/react\";\nimport type { LoaderArgs } from \"@remix-run/server-runtime\";\nimport { json } from \"@remix-run/server-runtime\";\nimport type { ChangeEvent, } from \"react\";\nimport { useState } from \"react\";\nimport { ChatGPT } from \"~/components/ChatGPT\";\n\nexport async function loader({ params, request }: LoaderArgs) {\n  const apikey = process.env.OPENAI_API_KEY;\n  return json({ apikey });\n}\n\nexport default function NoteIndexPage() {\n  const data = useLoaderData<typeof loader>();\n  const [prompt, setPrompt] = useState('');\n  const [promptSend, setPromptSend] = useState('');\n  const [persona, setPersona] = useState('');\n  const [personaSend, setPersonaSend] = useState('');\n\n  const handlePromptChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setPrompt(e.target.value)\n    e.preventDefault()\n  }\n\n  const handleSend = () => {\n    setPromptSend(prompt)\n    setPrompt('')\n  }\n\n  const handlePersonaChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setPersona(e.target.value)\n    e.preventDefault()\n  }\n\n  const handlePersonaSet = () => {\n    setPersonaSend(persona)\n    setPersona('')\n  }\n\n  return (\n    <div className=\"m-10\">\n      <p className=\"text-xl\">Refresh browser or set a persona to clear context</p>\n      <div>\n        <div className=\"flex m-2\">\n          <input\n            value={persona}\n            onChange={handlePersonaChange}\n            id=\"persona\"\n            name=\"persona\"\n            type=\"text\"\n            placeholder=\"ChatGPT Persona?\"\n            className=\"input-bordered input-primary input mr-1\"\n          />\n          <button className=\"btn btn-primary\" onClick={handlePersonaSet}>\n            Set\n          </button>\n        </div>\n      </div>\n      {personaSend &&\n        <div>\n          <div className=\"flex justify-between m-2\">\n            <input\n              value={prompt}\n              onChange={handlePromptChange}\n              id=\"search\"\n              name=\"search\"\n              type=\"text\"\n              placeholder=\"Chat\"\n              className=\"input-bordered input-primary input w-full mr-1\"\n            />\n            <button className=\"btn btn-primary\" onClick={handleSend}>\n              Send\n            </button>\n          </div>\n          <ChatGPT apikey={data.apikey} prompt={promptSend} persona={personaSend} />\n        </div>\n      }\n    </div>\n  );\n}\n", "import * as React from \"react\";\nimport type { ChatCompletionResponseMessage } from 'openai';\nimport { Configuration, OpenAIApi } from 'openai';\nimport { useEffect, useState } from \"react\";\n\nexport function ChatGPT({ apikey, prompt, persona }: { apikey: string | undefined, prompt: string, persona: string }) {\n  const person = persona;\n  const initMessages: Array<ChatCompletionResponseMessage> =\n    [\n      {\n        role: 'system',\n        content: `Answer every question like you are ${person}`\n      }\n    ]\n  const [messages, setMessages] = useState<Array<ChatCompletionResponseMessage>>(initMessages)\n  const [chatMessages, setChatMessages] = useState<Array<ChatCompletionResponseMessage>>(initMessages)\n\n  const configuration = new Configuration({\n    apiKey: apikey\n  });\n  const openai = new OpenAIApi(configuration);\n\n  async function callGPT() {\n    return await openai.createChatCompletion({\n      model: \"gpt-3.5-turbo\",\n      temperature: 0.8,\n      messages: [\n        ...messages,\n        { role: 'user', content: prompt }\n      ],\n    });\n  }\n\n  useEffect(() => {\n    if (prompt) {\n      callGPT().then(r => {\n        console.log(r.data);\n        if (r.data.choices[0].message) {\n          setMessages([...messages, { role: 'user', content: prompt }, r.data.choices[0].message]);\n          setChatMessages([{ role: 'user', content: prompt }, r.data.choices[0].message, ...chatMessages]);\n        }\n      })\n    }\n  }, [prompt]);\n\n  useEffect(() => {\n    setMessages(initMessages)\n    setChatMessages(initMessages)\n  }, [persona]);\n\n  return (\n\n    <>\n      {chatMessages.map((message) => {\n        return (\n          <div className=\"border-4 border-white\" key={message.content}>\n            <p className=\"text-lg text-slate-600\">{message.role === 'system' || message.role === 'user' ? 'User:' : person}</p>\n            <p className=\"text-xl\">{message.content}</p>\n          </div>\n        )\n      })}\n    </>\n  );\n}\n", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { getUserId, createUserSession } from \"~/session.server\";\n\nimport { createUser, getUserByEmail } from \"~/models/user.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\ninterface ActionData {\n  errors: {\n    email?: string;\n    password?: string;\n  };\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\n\n  if (!validateEmail(email)) {\n    return json<ActionData>(\n      { errors: { email: \"Email is invalid\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json<ActionData>(\n      { errors: { password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json<ActionData>(\n      { errors: { password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const existingUser = await getUserByEmail(email);\n  if (existingUser) {\n    return json<ActionData>(\n      { errors: { email: \"A user already exists with this email\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await createUser(email, password);\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: false,\n    redirectTo,\n  });\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Sign Up\",\n  };\n};\n\nexport default function Join() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") ?? undefined;\n  const actionData = useActionData() as ActionData;\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center\">\n      <div className=\"mx-auto w-full max-w-md px-8\">\n        <Form method=\"post\" className=\"space-y-6\" noValidate>\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Email address\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.email && (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.password && (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Create Account\n          </button>\n          <div className=\"flex items-center justify-center\">\n            <div className=\"text-center text-sm text-gray-500\">\n              Already have an account?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/login\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Log in\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { createUser } from \"~/models/user.server\";\nimport { createUserSession } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  if (process.env.NODE_ENV === \"production\") {\n    console.error(\n      \"\uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 test routes should not be enabled in production \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8\"\n    );\n    // test routes should not be enabled in production or without\n    // enable test routes... Just in case this somehow slips through\n    // we'll redirect :)\n    return redirect(\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\");\n  }\n\n  const { email } = await request.json();\n  if (!email) {\n    throw new Error(\"email required for login\");\n  }\n  if (!email.endsWith(\"@example.com\")) {\n    throw new Error(\"All test emails must end in @example.com\");\n  }\n\n  const user = await createUser(email, \"myreallystrongpassword\");\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: true,\n    redirectTo: \"/\",\n  });\n};\n\nexport default null;\n", "export default {'version':'3626b526','entry':{'module':'/_static/build/entry.client-DZY6MSGD.js','imports':['/_static/build/_shared/chunk-HZTV24SK.js','/_static/build/_shared/chunk-MSLF4IBU.js','/_static/build/_shared/chunk-HRTTMHIP.js']},'routes':{'../cypress/support/test-routes/create-user':{'id':'../cypress/support/test-routes/create-user','parentId':'root','path':'__tests/create-user','index':undefined,'caseSensitive':undefined,'module':'/_static/build/_.._/cypress/support/test-routes/create-user-ILCPLJ3F.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/_static/build/root-SBW5OP43.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/about':{'id':'routes/about','parentId':'root','path':'about','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/about-D543DZNY.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/chat':{'id':'routes/chat','parentId':'root','path':'chat','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/chat-7FOJEITB.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/index-L5N4G4UT.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/join':{'id':'routes/join','parentId':'root','path':'join','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/join-XVWCHJ2W.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/login-VW6FA34Z.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/logout-PB4Y6XZM.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/mag/$mag/index':{'id':'routes/mag/$mag/index','parentId':'root','path':'mag/:mag','index':true,'caseSensitive':undefined,'module':'/_static/build/routes/mag/$mag/index-2IKORZAS.js','imports':['/_static/build/_shared/chunk-DVGHF6JK.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/mag/$magId/edit':{'id':'routes/mag/$magId/edit','parentId':'root','path':'mag/:magId/edit','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/mag/$magId/edit-65PEN76E.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/mag/index':{'id':'routes/mag/index','parentId':'root','path':'mag','index':true,'caseSensitive':undefined,'module':'/_static/build/routes/mag/index-24O2F5E4.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/mag/new':{'id':'routes/mag/new','parentId':'root','path':'mag/new','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/mag/new-XDCRFR6A.js','imports':['/_static/build/_shared/chunk-7EFBAM2V.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes':{'id':'routes/notes','parentId':'root','path':'notes','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/notes-62S4DNFD.js','imports':['/_static/build/_shared/chunk-7EFBAM2V.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/$noteId':{'id':'routes/notes/$noteId','parentId':'routes/notes','path':':noteId','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/notes/$noteId-BFKUD4IU.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/notes/index':{'id':'routes/notes/index','parentId':'routes/notes','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/notes/index-YL6TW7MP.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/new':{'id':'routes/notes/new','parentId':'routes/notes','path':'new','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/notes/new-TAHFMOH7.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/stories/$storyId/edit':{'id':'routes/stories/$storyId/edit','parentId':'root','path':'stories/:storyId/edit','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/stories/$storyId/edit-AVOX4O42.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/stories/$tag':{'id':'routes/stories/$tag','parentId':'root','path':'stories/:tag','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/stories/$tag-6TGQPFBU.js','imports':['/_static/build/_shared/chunk-DVGHF6JK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/stories/random':{'id':'routes/stories/random','parentId':'root','path':'stories/random','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/stories/random-DUIFD7TW.js','imports':['/_static/build/_shared/chunk-DVGHF6JK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/story/new':{'id':'routes/story/new','parentId':'root','path':'story/new','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/story/new-CEA2OMQE.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/tags/$storyId/new':{'id':'routes/tags/$storyId/new','parentId':'root','path':'tags/:storyId/new','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/tags/$storyId/new-DAFTCLHR.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/tags/index':{'id':'routes/tags/index','parentId':'root','path':'tags','index':true,'caseSensitive':undefined,'module':'/_static/build/routes/tags/index-V3EZ7E6Y.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'hmr':undefined,'url':'/_static/build/manifest-3626B526.js'};"],
  "mappings": "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",
  "names": ["isbot", "import_node", "import_react", "import_node", "import_tiny_invariant", "arc", "bcrypt", "invariant", "bcrypt", "invariant", "import_node", "import_react", "import_jsx_dev_runtime", "Theme", "import_react", "import_jsx_dev_runtime", "loader", "import_node", "import_react", "import_functions", "arc", "cuid", "arc", "arc", "import_jsx_dev_runtime", "loader", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "_k", "_l", "_m", "_n", "_o", "_p", "_q", "_r", "action", "loader", "import_node", "import_react", "React", "import_jsx_dev_runtime", "loader", "action", "_a", "_b", "edit_exports", "action", "loader", "import_node", "import_react", "React", "import_jsx_dev_runtime", "loader", "action", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "action", "loader", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "action", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "CatchBoundary", "ErrorBoundary", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "ErrorBoundary", "CatchBoundary", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "mag_exports", "action", "loader", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "action", "new_exports", "action", "loader", "import_node", "import_react", "React", "import_node", "cloudinary", "import_jsx_dev_runtime", "loader", "action", "composeUploadHandlers", "createMemoryUploadHandler", "parseMultipartFormData", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "_k", "_l", "_m", "_n", "_o", "_p", "_q", "_r", "_s", "_t", "new_exports", "action", "import_node", "import_react", "React", "import_react", "route", "import_jsx_dev_runtime", "action", "composeUploadHandlers", "createMemoryUploadHandler", "parseMultipartFormData", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "action", "loader", "import_node", "action", "loader", "import_jsx_dev_runtime", "loader", "import_server_runtime", "import_react", "import_jsx_dev_runtime", "action", "loader", "meta", "import_node", "import_react", "React", "import_jsx_dev_runtime", "loader", "action", "meta", "_a", "_b", "_c", "_d", "loader", "import_node", "import_react", "import_functions", "import_cuid", "arc", "cuid", "import_jsx_dev_runtime", "loader", "CatchBoundary", "ErrorBoundary", "action", "loader", "import_node", "import_react", "import_tiny_invariant", "import_jsx_dev_runtime", "loader", "invariant", "action", "ErrorBoundary", "CatchBoundary", "notes_exports", "import_react", "import_jsx_dev_runtime", "new_exports", "action", "import_node", "import_react", "React", "import_jsx_dev_runtime", "action", "_a", "_b", "_c", "_d", "NoteIndexPage", "loader", "import_react", "import_server_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "NoteIndexPage", "action", "loader", "meta", "import_node", "import_react", "React", "import_jsx_dev_runtime", "loader", "action", "meta", "_a", "_b", "_c", "_d", "action", "import_node", "action", "edit_exports", "mag_exports", "new_exports", "notes_exports"]
}
